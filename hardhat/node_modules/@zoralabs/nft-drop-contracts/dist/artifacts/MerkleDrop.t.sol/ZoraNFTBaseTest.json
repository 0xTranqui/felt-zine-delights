{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_FUNDS_RECIPIENT_ADDRESS",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_OWNER_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ZORA_DAO_ADDRESS",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dummyRenderer",
      "outputs": [
        {
          "internalType": "contract DummyMetadataRenderer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeManager",
      "outputs": [
        {
          "internalType": "contract ZoraFeeManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mediaContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "merkleData",
      "outputs": [
        {
          "internalType": "contract MerkleData",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_MerklePurchaseActiveSuccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_MerklePurchaseAndPublicSaleEditionSizeZero",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_MerklePurchaseAndPublicSalePurchaseLimits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_MerklePurchaseInactiveFails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "568:8580:61:-:0;;;;;1569:26:2;;;-1:-1:-1;;1569:26:2;1591:4;1569:26;;;728:27:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;683:72:61;;;-1:-1:-1;;;;;;683:72:61;-1:-1:-1;;;;;683:72:61;;;;;;;;;;568:8580;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "568:8580:61:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1944:548;;;:::i;:::-;;903:99;;993:7;903:99;;;;;-1:-1:-1;;;;;194:55:68;;;176:74;;164:2;149:18;903:99:61;;;;;;;;8100:1046;;;:::i;637:40::-;;1666:64:2;637:40:61;;4299:2102;;;:::i;1104:57::-;;1152:8;1104:57;;2498:1795;;;:::i;683:72::-;;;;;-1:-1:-1;;;;;683:72:61;;;833:64;;889:7;833:64;;6407:1687;;;:::i;799:28::-;;;;;-1:-1:-1;;;;;799:28:61;;;1601:18:2;;;;;;;;;;;;;;;1412:14:68;;1405:22;1387:41;;1375:2;1360:18;1601::2;1247:187:68;761:32:61;;;;;-1:-1:-1;;;;;761:32:61;;;1008:90;;1091:5;1008:90;;1569:26:2;;;;;;;;;1944:548:61;1978:34;;;;;1091:5;1978:34;;;176:74:68;1666:64:2;;1978:8:61;;149:18:68;;1978:34:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2054:3;1091:5;2035:49;;;;;:::i;:::-;2124:25:68;;;-1:-1:-1;;;;;2185:55:68;2180:2;2165:18;;2158:83;2112:2;2097:18;2035:49:61;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2022:10:61;:62;;;;-1:-1:-1;;;;;2022:62:61;;;;;;;;;;2094:34;;;;;1091:5;2094:34;;;176:74:68;1666:64:2;;2094:8:61;;149:18:68;;2094:34:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2207:10:61;;2175:135;;2139:12;;-1:-1:-1;;;;;;2207:10:61;;;;-1:-1:-1;2243:4:61;;2139:12;;2175:135;;;:::i;:::-;-1:-1:-1;;;;;2583:15:68;;;2565:34;;2635:15;;;2630:2;2615:18;;2608:43;2687:15;;;2682:2;2667:18;;2660:43;2492:2;2477:18;2175:135:61;;;;;;;;;;;;;;;;;;;;;;;2139:181;;2330:23;2392:4;2372:29;;;;;:::i;:::-;-1:-1:-1;;;;;2943:55:68;;;2925:74;;3035:2;3030;3015:18;;3008:30;;;-1:-1:-1;3054:18:68;;;3047:29;3108:2;3093:18;2372:29:61;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2413:11:61;:33;;;;;-1:-1:-1;;;;;2413:33:61;;;;;;2469:16;;2413:33;;-1:-1:-1;2469:16:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2456:10:61;:29;;;;-1:-1:-1;;;;;2456:29:61;;;;;;;;;;-1:-1:-1;;1944:548:61:o;8100:1046::-;1206:11;;;1514:309;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1856:13;;1206:713;;;;;-1:-1:-1;;;;;1206:11:61;;;;;;;:22;;:713;;889:7;;993;;1454:2;;1483:3;;1514:309;;1856:13;;;1206:713;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8178:36:61::1;::::0;-1:-1:-1;;;8178:36:61;;889:7:::1;8178:36;::::0;::::1;176:74:68::0;1666:64:2;;-1:-1:-1;8178:13:61::1;::::0;-1:-1:-1;149:18:68;;8178:36:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;8294:12:61::1;::::0;;;;8302:3:::1;8294:12;::::0;::::1;5676:25:68::0;1666:64:2;;-1:-1:-1;8294:7:61::1;::::0;-1:-1:-1;5649:18:68;;8294:12:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;8316:11:61::1;::::0;;8580:10:::1;::::0;:64:::1;::::0;-1:-1:-1;;;8580:64:61;;-1:-1:-1;;;;;8316:11:61;;;::::1;::::0;::::1;::::0;-1:-1:-1;8316:32:61::1;::::0;-1:-1:-1;8316:11:61;;;;;;;;;;8580:10:::1;::::0;:44:::1;::::0;:64:::1;::::0;::::1;;5914:2:68::0;5896:21;;;5953:2;5933:18;;;5926:30;5992:18;5987:2;5972:18;;5965:46;6043:2;6028:18;;5712:340;8580:64:61::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;8580:64:61::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;:86;;::::0;8316:361:::1;::::0;;::::1;::::0;;;;;;10670:28:68;10658:41;;;8316:361:61::1;::::0;::::1;10640:60:68::0;8316:361:61::1;10736:23:68::0;;;;10716:18;;;10709:51;10779:18;10833:15;;;10813:18;;;10806:43;10885:15;;;10865:18;;;10858:43;10938:15;;10917:19;;;10910:44;10991:15;10970:19;;;10963:44;11023:19;;;11016:35;10612:19;;8316:361:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;8687:14:61::1;::::0;;-1:-1:-1;;;8687:14:61;;;;1666:64:2;;-1:-1:-1;8687:12:61::1;::::0;-1:-1:-1;8687:14:61::1;::::0;;::::1;::::0;1690:37:2::1;::::0;8687:14:61;;;;;;;1690:37:2;1666:64;8687:14:61;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;8711:31:61::1;::::0;;;;8727:4:::1;8711:31;::::0;::::1;11262:74:68::0;8734:7:61::1;11352:18:68::0;;;11345:34;1666:64:2;;-1:-1:-1;8711:7:61::1;::::0;-1:-1:-1;11235:18:68;;8711:31:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;8753:28:61::1;::::0;-1:-1:-1;;;8753:28:61;;8775:4:::1;8753:28;::::0;::::1;176:74:68::0;1666:64:2;;-1:-1:-1;8753:13:61::1;::::0;-1:-1:-1;149:18:68;;8753:28:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;8828:10:61::1;::::0;:60:::1;::::0;-1:-1:-1;;;8828:60:61;;5914:2:68;8828:60:61::1;::::0;::::1;5896:21:68::0;5953:2;5933:18;;;5926:30;5992:18;5972;;;5965:46;8791:34:61::1;::::0;-1:-1:-1;;;;;;8828:10:61;;::::1;::::0;-1:-1:-1;8828:40:61::1;::::0;6028:18:68;;8828:60:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;8828:60:61::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;:81:::0;:84;;:81:::1;::::0;:84:::1;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;8922:54:::1;::::0;;;;8938:37;8922:54:::1;::::0;::::1;11723:98:68::0;8828:84:61;;-1:-1:-1;1666:64:2;;8922:15:61::1;::::0;11696:18:68;;8922:54:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;8986:11:61::1;::::0;9021:14:::1;::::0;;::::1;::::0;9065:12:::1;::::0;::::1;::::0;9119:10:::1;::::0;::::1;::::0;8986:153;;;;;:11;;;::::1;-1:-1:-1::0;;;;;8986:11:61::1;::::0;-1:-1:-1;8986:27:61::1;::::0;-1:-1:-1;9021:14:61;;8986:153:::1;::::0;9050:1:::1;::::0;9065:12;9021:14;;9119:10;8986:153:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8168:978;8100:1046::o:0;4299:2102::-;1206:11;;;1514:309;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1856:13;;1206:713;;;;;-1:-1:-1;;;;;1206:11:61;;;;;;;:22;;:713;;889:7;;993;;1454:2;;1483:3;;1514:309;;1856:13;;;1206:713;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4411:36:61::1;::::0;-1:-1:-1;;;4411:36:61;;889:7:::1;4411:36;::::0;::::1;176:74:68::0;1666:64:2;;-1:-1:-1;4411:13:61::1;::::0;-1:-1:-1;149:18:68;;4411:36:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4457:11:61::1;::::0;;4753:10:::1;::::0;:44:::1;::::0;-1:-1:-1;;;4753:44:61;;-1:-1:-1;;;;;4457:11:61;;;::::1;::::0;::::1;::::0;-1:-1:-1;4457:32:61::1;::::0;-1:-1:-1;4669:9:61::1;::::0;4719:1:::1;::::0;4457:11;;4551:16:::1;::::0;4457:11;;4551:16;;4753:10:::1;::::0;:27:::1;::::0;:44:::1;::::0;::::1;;13152:2:68::0;13134:21;;;13191:2;13171:18;;;13164:30;13230:15;13225:2;13210:18;;13203:43;13278:2;13263:18;;12950:337;4753:44:61::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;4753:44:61::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;:49;;::::0;4457:356:::1;::::0;;::::1;::::0;;;;;;10670:28:68;10658:41;;;4457:356:61::1;::::0;::::1;10640:60:68::0;4457:356:61::1;10736:23:68::0;;;;10716:18;;;10709:51;10779:18;10833:15;;;10813:18;;;10806:43;10885:15;;;10865:18;;;10858:43;10938:15;;10917:19;;;10910:44;10991:15;10970:19;;;10963:44;11023:19;;;11016:35;10612:19;;4457:356:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4823:14:61::1;::::0;;-1:-1:-1;;;4823:14:61;;;;1666:64:2;;-1:-1:-1;4823:12:61::1;::::0;-1:-1:-1;4823:14:61::1;::::0;;::::1;::::0;1690:37:2::1;::::0;4823:14:61;;;;;;;1690:37:2;1666:64;4823:14:61;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4848:34;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4848:34:61::1;4900:10;::::0;:44:::1;::::0;-1:-1:-1;;;4900:44:61;;13152:2:68;4900:44:61::1;::::0;::::1;13134:21:68::0;13191:2;13171:18;;;13164:30;13230:15;13210:18;;;13203:43;-1:-1:-1;;;;;4900:10:61;;::::1;::::0;:27:::1;::::0;13263:18:68;;4900:44:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;4900:44:61::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;:52:::0;:55;;:52:::1;::::0;:55:::1;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;4981:9;;4965:36:::1;::::0;;;;-1:-1:-1;;;;;11280:55:68;;;4965:36:61::1;::::0;::::1;11262:74:68::0;4993:7:61::1;11352:18:68::0;;;11345:34;4900:55:61;;-1:-1:-1;1666:64:2;;4965:7:61::1;::::0;11235:18:68;;4965:36:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;5033:9:61;;5011:33:::1;::::0;-1:-1:-1;;;5011:33:61;;-1:-1:-1;;;;;194:55:68;;;5011:33:61::1;::::0;::::1;176:74:68::0;1666:64:2;;-1:-1:-1;5011:13:61::1;::::0;-1:-1:-1;149:18:68;;5011:33:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;5055:63:61::1;::::0;;;;5071:46;5055:63:::1;::::0;::::1;11723:98:68::0;1666:64:2;;-1:-1:-1;5055:15:61::1;::::0;-1:-1:-1;11696:18:68;;5055:63:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;5128:11:61::1;::::0;5163:14:::1;::::0;::::1;::::0;5128:11;;;::::1;-1:-1:-1::0;;;;;5128:11:61::1;::::0;-1:-1:-1;5128:27:61::1;::::0;-1:-1:-1;5163:18:61::1;::::0;5180:1:::1;5163:18;:::i;:::-;5196:1;5211:4;:12;;;5237:4;:14;;;5265:4;:10;;;5128:157;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5296:11:61::1;::::0;5331:14:::1;::::0;::::1;::::0;5296:11;;;::::1;-1:-1:-1::0;;;;;5296:11:61::1;::::0;:27:::1;::::0;5331:18:::1;::::0;5348:1:::1;5331:18;:::i;:::-;5364:1;5379:4;:12;;;5405:4;:14;;;5433:4;:10;;;5296:157;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5463:11:61::1;::::0;5498:14:::1;::::0;::::1;::::0;5463:11;;;::::1;-1:-1:-1::0;;;;;5463:11:61::1;::::0;:27:::1;::::0;5498:18:::1;::::0;5515:1:::1;5498:18;:::i;:::-;5531:1;5546:4;:12;;;5572:4;:14;;;5600:4;:10;;;5463:157;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5630:50;5639:11;;;;;;;;;-1:-1:-1::0;;;;;5639:11:61::1;-1:-1:-1::0;;;;;5639:23:61::1;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;;5678:1;5630:8;:50::i;:::-;5745:9:::0;;::::1;5711:11:::0;:22:::1;::::0;;;;5731:1:::1;5711:22;::::0;::::1;5676:25:68::0;-1:-1:-1;;;;;5711:44:61;;::::1;::::0;:11;;;::::1;::::0;;::::1;::::0;:19:::1;::::0;5649:18:68;;5711:22:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5711:44:61::1;;5690:126;;;::::0;::::1;::::0;;16981:2:68;5690:126:61::1;::::0;::::1;16963:21:68::0;17020:2;17000:18;;;16993:30;17059:34;17039:18;;;17032:62;17130:5;17110:18;;;17103:33;17153:19;;5690:126:61::1;;;;;;;;;5827:63;::::0;;;;5843:46;5827:63:::1;::::0;::::1;11723:98:68::0;1666:64:2;;5827:15:61::1;::::0;11696:18:68;;5827:63:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;5900:11:61::1;::::0;5935:14:::1;::::0;::::1;::::0;5900:11;;;::::1;-1:-1:-1::0;;;;;5900:11:61::1;::::0;-1:-1:-1;5900:27:61::1;::::0;-1:-1:-1;5935:18:61::1;::::0;5952:1:::1;5935:18;:::i;:::-;5968:1;5983:4;:12;;;6009:4;:14;;;6037:4;:10;;;5900:157;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;6068:11:61::1;::::0;:41:::1;::::0;;;;6107:1:::1;6068:41;::::0;::::1;5676:25:68::0;6068:11:61;;;::::1;-1:-1:-1::0;;;;;6068:11:61::1;::::0;:20:::1;::::0;6096:9:::1;::::0;5649:18:68;;6068:41:61::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;6174:9:61;;::::1;6140:11:::0;:22:::1;::::0;;;;6160:1:::1;6140:22;::::0;::::1;5676:25:68::0;-1:-1:-1;;;;;6140:44:61;;::::1;::::0;:11;;;::::1;::::0;;::::1;::::0;:19:::1;::::0;5649:18:68;;6140:22:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6140:44:61::1;;6119:126;;;::::0;::::1;::::0;;16981:2:68;6119:126:61::1;::::0;::::1;16963:21:68::0;17020:2;17000:18;;;16993:30;17059:34;17039:18;;;17032:62;17130:5;17110:18;;;17103:33;17153:19;;6119:126:61::1;16779:399:68::0;6119:126:61::1;6255:64;::::0;;;;6271:47;6255:64:::1;::::0;::::1;11723:98:68::0;1666:64:2;;6255:15:61::1;::::0;11696:18:68;;6255:64:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;6329:11:61::1;::::0;:41:::1;::::0;;;;6368:1:::1;6329:41;::::0;::::1;5676:25:68::0;6329:11:61;;;::::1;-1:-1:-1::0;;;;;6329:11:61::1;::::0;-1:-1:-1;6329:20:61::1;::::0;-1:-1:-1;6357:9:61::1;::::0;5649:18:68;;6329:41:61::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;6380:14:61::1;::::0;;-1:-1:-1;;;6380:14:61;;;;1666:64:2;;6380:12:61::1;::::0;:14:::1;::::0;;::::1;::::0;1690:37:2::1;::::0;6380:14:61;;;;;;;1690:37:2;1666:64;6380:14:61;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4401:2000;4299:2102::o:0;2498:1795::-;1206:11;;;1514:309;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1856:13;;1206:713;;;;;-1:-1:-1;;;;;1206:11:61;;;;;;;:22;;:713;;889:7;;993;;1454:2;;1483:3;;1514:309;;1856:13;;;1206:713;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2576:36:61::1;::::0;-1:-1:-1;;;2576:36:61;;889:7:::1;2576:36;::::0;::::1;176:74:68::0;1666:64:2;;-1:-1:-1;2576:13:61::1;::::0;-1:-1:-1;149:18:68;;2576:36:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2622:11:61::1;::::0;;2901:10:::1;::::0;:64:::1;::::0;-1:-1:-1;;;2901:64:61;;-1:-1:-1;;;;;2622:11:61;;;::::1;::::0;::::1;::::0;-1:-1:-1;2622:32:61::1;::::0;-1:-1:-1;2622:11:61;;;;;;;;2772:16:::1;::::0;2901:10:::1;::::0;:44:::1;::::0;:64:::1;::::0;::::1;;5914:2:68::0;5896:21;;;5953:2;5933:18;;;5926:30;5992:18;5987:2;5972:18;;5965:46;6043:2;6028:18;;5712:340;2901:64:61::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;2901:64:61::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;:86;;::::0;2622:376:::1;::::0;;::::1;::::0;;;;;;10670:28:68;10658:41;;;2622:376:61::1;::::0;::::1;10640:60:68::0;2622:376:61::1;10736:23:68::0;;;;10716:18;;;10709:51;10779:18;10833:15;;;10813:18;;;10806:43;10885:15;;;10865:18;;;10858:43;10938:15;;10917:19;;;10910:44;10991:15;10970:19;;;10963:44;11023:19;;;11016:35;10612:19;;2622:376:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3008:14:61::1;::::0;;-1:-1:-1;;;3008:14:61;;;;1666:64:2;;-1:-1:-1;3008:12:61::1;::::0;-1:-1:-1;3008:14:61::1;::::0;;::::1;::::0;1690:37:2::1;::::0;3008:14:61;;;;;;;1690:37:2;1666:64;3008:14:61;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3033:34;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3033:34:61::1;3085:10;::::0;:47:::1;::::0;-1:-1:-1;;;3085:47:61;;5914:2:68;3085:47:61::1;::::0;::::1;5896:21:68::0;5953:2;5933:18;;;5926:30;5992:18;5972;;;5965:46;-1:-1:-1;;;;;3085:10:61;;::::1;::::0;:27:::1;::::0;6028:18:68;;3085:47:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;3085:47:61::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;:55:::0;:58;;:55:::1;::::0;:58:::1;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;3169:9;;3153:36:::1;::::0;;;;-1:-1:-1;;;;;11280:55:68;;;3153:36:61::1;::::0;::::1;11262:74:68::0;3181:7:61::1;11352:18:68::0;;;11345:34;3085:58:61;;-1:-1:-1;1666:64:2;;3153:7:61::1;::::0;11235:18:68;;3153:36:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3221:9:61;;3199:33:::1;::::0;-1:-1:-1;;;3199:33:61;;-1:-1:-1;;;;;194:55:68;;;3199:33:61::1;::::0;::::1;176:74:68::0;1666:64:2;;-1:-1:-1;3199:13:61::1;::::0;-1:-1:-1;149:18:68;;3199:33:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3243:11:61::1;::::0;3278:14:::1;::::0;;::::1;::::0;3322:12:::1;::::0;::::1;::::0;3376:10:::1;::::0;::::1;::::0;3243:153;;;;;:11;;;::::1;-1:-1:-1::0;;;;;3243:11:61::1;::::0;-1:-1:-1;3243:27:61::1;::::0;-1:-1:-1;3278:14:61;;3243:153:::1;::::0;3307:1:::1;::::0;3322:12;3278:14;;3376:10;3243:153:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3406:49;3415:11;;;;;;;;;-1:-1:-1::0;;;;;3415:11:61::1;-1:-1:-1::0;;;;;3415:23:61::1;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;;;3452:2;3406:8;:49::i;:::-;3465:50;3474:11;;;;;;;;;-1:-1:-1::0;;;;;3474:11:61::1;-1:-1:-1::0;;;;;3474:23:61::1;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;;3513:1;3465:8;:50::i;:::-;3580:9:::0;;::::1;3546:11:::0;:22:::1;::::0;;;;3566:1:::1;3546:22;::::0;::::1;5676:25:68::0;-1:-1:-1;;;;;3546:44:61;;::::1;::::0;:11;;;::::1;::::0;;::::1;::::0;:19:::1;::::0;5649:18:68;;3546:22:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3546:44:61::1;;3525:126;;;::::0;::::1;::::0;;16981:2:68;3525:126:61::1;::::0;::::1;16963:21:68::0;17020:2;17000:18;;;16993:30;17059:34;17039:18;;;17032:62;17130:5;17110:18;;;17103:33;17153:19;;3525:126:61::1;16779:399:68::0;3525:126:61::1;3661:14;::::0;;-1:-1:-1;;;3661:14:61;;;;1666:64:2;;3661:12:61::1;::::0;:14:::1;::::0;;::::1;::::0;1690:37:2::1;::::0;3661:14:61;;;;;;;1690:37:2;1666:64;3661:14:61;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3693:10:61::1;::::0;:47:::1;::::0;-1:-1:-1;;;3693:47:61;;5914:2:68;3693:47:61::1;::::0;::::1;5896:21:68::0;5953:2;5933:18;;;5926:30;5992:18;5972;;;5965:46;-1:-1:-1;;;;;3693:10:61;;::::1;::::0;-1:-1:-1;3693:27:61::1;::::0;-1:-1:-1;6028:18:68;;3693:47:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;3693:47:61::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;:55:::0;:58;;3749:1:::1;::::0;3693:58;::::1;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;3777:9;;3761:36:::1;::::0;;;;-1:-1:-1;;;;;11280:55:68;;;3761:36:61::1;::::0;::::1;11262:74:68::0;3789:7:61::1;11352:18:68::0;;;11345:34;3693:58:61;;-1:-1:-1;1666:64:2;;3761:7:61::1;::::0;11235:18:68;;3761:36:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3829:9:61;;3807:33:::1;::::0;-1:-1:-1;;;3807:33:61;;-1:-1:-1;;;;;194:55:68;;;3807:33:61::1;::::0;::::1;176:74:68::0;1666:64:2;;-1:-1:-1;3807:13:61::1;::::0;-1:-1:-1;149:18:68;;3807:33:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3850:11:61::1;::::0;3885:14:::1;::::0;::::1;::::0;3850:11;;;::::1;-1:-1:-1::0;;;;;3850:11:61::1;::::0;-1:-1:-1;3850:27:61::1;::::0;-1:-1:-1;3885:18:61::1;::::0;3850:11:::1;3885:18;:::i;:::-;3918:1;3933:4;:12;;;3959:4;:14;;;3987:4;:10;;;3850:157;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4017:49;4026:11;;;;;;;;;-1:-1:-1::0;;;;;4026:11:61::1;-1:-1:-1::0;;;;;4026:23:61::1;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;4017:49;4076:50;4085:11;;;;;;;;;-1:-1:-1::0;;;;;4085:11:61::1;-1:-1:-1::0;;;;;4085:23:61::1;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;;4124:1;4076:8;:50::i;:::-;4191:9:::0;;::::1;4157:11:::0;:22:::1;::::0;;;;:11:::1;:22;::::0;::::1;5676:25:68::0;-1:-1:-1;;;;;4157:44:61;;::::1;::::0;:11;;;::::1;::::0;;::::1;::::0;:19:::1;::::0;5649:18:68;;4157:22:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4157:44:61::1;;4136:126;;;::::0;::::1;::::0;;16981:2:68;4136:126:61::1;::::0;::::1;16963:21:68::0;17020:2;17000:18;;;16993:30;17059:34;17039:18;;;17032:62;17130:5;17110:18;;;17103:33;17153:19;;4136:126:61::1;16779:399:68::0;4136:126:61::1;4272:14;::::0;;-1:-1:-1;;;4272:14:61;;;;1666:64:2;;4272:12:61::1;::::0;:14:::1;::::0;;::::1;::::0;1690:37:2::1;::::0;4272:14:61;;;;;;;1690:37:2;1666:64;4272:14:61;::::1;;::::0;::::1;;;;::::0;::::1;6407:1687:::0;6483:11;;;6875:309;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6795:13;;6483:712;;;;;:11;;;;-1:-1:-1;;;;;6483:11:61;;;;:22;;:712;;889:7;;993;;6759:3;;6875:309;;6795:13;;6483:712;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7206:36:61;;-1:-1:-1;;;7206:36:61;;889:7;7206:36;;;176:74:68;1666:64:2;;-1:-1:-1;7206:13:61;;-1:-1:-1;149:18:68;;7206:36:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7252:11:61;;;7548:10;;:44;;-1:-1:-1;;;7548:44:61;;-1:-1:-1;;;;;7252:11:61;;;;;;;-1:-1:-1;7252:32:61;;-1:-1:-1;7464:9:61;;7514:1;;7252:11;;7346:16;;7252:11;;7346:16;;7548:10;;:27;;:44;;;;13152:2:68;13134:21;;;13191:2;13171:18;;;13164:30;13230:15;13225:2;13210:18;;13203:43;13278:2;13263:18;;12950:337;7548:44:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7548:44:61;;;;;;;;;;;;:::i;:::-;:49;;;7252:356;;;;;;;;;;10670:28:68;10658:41;;;7252:356:61;;;10640:60:68;7252:356:61;10736:23:68;;;;10716:18;;;10709:51;10779:18;10833:15;;;10813:18;;;10806:43;10885:15;;;10865:18;;;10858:43;10938:15;;10917:19;;;10910:44;10991:15;10970:19;;;10963:44;11023:19;;;11016:35;10612:19;;7252:356:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7618:14:61;;;-1:-1:-1;;;7618:14:61;;;;1666:64:2;;-1:-1:-1;7618:12:61;;-1:-1:-1;7618:14:61;;;;;1690:37:2;;7618:14:61;;;;;;;1690:37:2;1666:64;7618:14:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7643:34;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7643:34:61;7695:10;;:44;;-1:-1:-1;;;7695:44:61;;13152:2:68;7695:44:61;;;13134:21:68;13191:2;13171:18;;;13164:30;13230:15;13210:18;;;13203:43;-1:-1:-1;;;;;7695:10:61;;;;:27;;13263:18:68;;7695:44:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7695:44:61;;;;;;;;;;;;:::i;:::-;:52;:55;;:52;;:55;;;;:::i;:::-;;;;;;;;;;;7776:9;;7760:36;;;;;-1:-1:-1;;;;;11280:55:68;;;7760:36:61;;;11262:74:68;7788:7:61;11352:18:68;;;11345:34;7695:55:61;;-1:-1:-1;1666:64:2;;7760:7:61;;11235:18:68;;7760:36:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7828:9:61;;7806:33;;-1:-1:-1;;;7806:33:61;;-1:-1:-1;;;;;194:55:68;;;7806:33:61;;;176:74:68;1666:64:2;;-1:-1:-1;7806:13:61;;-1:-1:-1;149:18:68;;7806:33:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7850:50:61;;;;;7866:33;7850:50;;;11723:98:68;1666:64:2;;-1:-1:-1;7850:15:61;;-1:-1:-1;11696:18:68;;7850:50:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7910:11:61;;7945:14;;;;;7989:12;;;;8043:10;;;;7910:153;;;;;:11;;;;-1:-1:-1;;;;;7910:11:61;;-1:-1:-1;7910:27:61;;-1:-1:-1;7945:14:61;;7910:153;;7974:1;;7989:12;7945:14;;8043:10;7910:153;;;:::i;3989:262:2:-;4051:1;4046;:6;4042:203;;4073:41;;;;;20494:2:68;20476:21;;;20533:2;20513:18;;;20506:30;20572:34;20567:2;20552:18;;20545:62;20643:4;20638:2;20623:18;;20616:32;20680:3;20665:19;;20292:398;4073:41:2;;;;;;;;4133:31;;;20907:21:68;;;20964:2;20944:18;;;20937:30;21003:12;20998:2;20983:18;;20976:40;21083:4;21068:20;;21061:36;;;4133:31:2;;;;;;;21048:3:68;4133:31:2;;;4183;;;21320:21:68;;;21377:2;21357:18;;;21350:30;21416:12;21411:2;21396:18;;21389:40;21496:4;21481:20;;21474:36;;;4183:31:2;;;;;;;21461:3:68;4183:31:2;;;4228:6;1849;:13;;;;;;;;1814:55;-1:-1:-1;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;4050:1465:68:-;4720:4;4749:3;4779:2;4768:9;4761:21;4805:49;4850:2;4839:9;4835:18;3199:1;3187:14;;3233:10;3226:4;3217:14;;3210:34;3269:2;3260:12;;3122:156;4805:49;4791:63;;4902:9;4894:6;4890:22;4885:2;4874:9;4870:18;4863:50;4936:37;4966:6;3360:1;3348:14;;3394:6;3387:4;3378:14;;3371:30;3426:2;3417:12;;3283:152;4936:37;4922:51;;-1:-1:-1;;;;;5082:2:68;5074:6;5070:15;5065:2;5054:9;5050:18;5043:43;5134:2;5126:6;5122:15;5117:2;5106:9;5102:18;5095:43;5187:18;5179:6;5175:31;5169:3;5158:9;5154:19;5147:60;5256:6;5248;5244:19;5238:3;5227:9;5223:19;5216:48;5273:65;5333:3;5322:9;5318:19;5310:6;3542:28;3534:5;3528:12;3524:47;3519:3;3512:60;3633:10;3625:4;3618:5;3614:16;3608:23;3604:40;3597:4;3592:3;3588:14;3581:64;3691:4;3684:5;3680:16;3674:23;3716:18;3784:2;3770:12;3766:21;3759:4;3754:3;3750:14;3743:45;3849:2;3841:4;3834:5;3830:16;3824:23;3820:32;3813:4;3808:3;3804:14;3797:56;3914:2;3906:4;3899:5;3895:16;3889:23;3885:32;3878:4;3873:3;3869:14;3862:56;3979:2;3971:4;3964:5;3960:16;3954:23;3950:32;3943:4;3938:3;3934:14;3927:56;;;4032:4;4025:5;4021:16;4015:23;4008:4;4003:3;3999:14;3992:47;3440:605;;;5273:65;5375:15;;;;5369:3;5354:19;;5347:44;-1:-1:-1;5428:22:68;;;5422:3;5407:19;;;5400:51;-1:-1:-1;5460:17:68;;5506:2;5494:15;;4050:1465;-1:-1:-1;;;;;4050:1465:68:o;6057:184::-;6109:77;6106:1;6099:88;6206:4;6203:1;6196:15;6230:4;6227:1;6220:15;6246:257;6318:4;6312:11;;;6350:17;;6397:18;6382:34;;6418:22;;;6379:62;6376:88;;;6444:18;;:::i;:::-;6480:4;6473:24;6246:257;:::o;6508:253::-;6580:2;6574:9;6622:4;6610:17;;6657:18;6642:34;;6678:22;;;6639:62;6636:88;;;6704:18;;:::i;6766:252::-;6838:2;6832:9;6880:3;6868:16;;6914:18;6899:34;;6935:22;;;6896:62;6893:88;;;6961:18;;:::i;7023:334::-;7094:2;7088:9;7150:2;7140:13;;-1:-1:-1;;7136:86:68;7124:99;;7253:18;7238:34;;7274:22;;;7235:62;7232:88;;;7300:18;;:::i;:::-;7336:2;7329:22;7023:334;;-1:-1:-1;7023:334:68:o;7362:194::-;7433:4;7466:18;7458:6;7455:30;7452:56;;;7488:18;;:::i;:::-;-1:-1:-1;7533:1:68;7529:14;7545:4;7525:25;;7362:194::o;7561:200::-;7640:13;;-1:-1:-1;;;;;7682:54:68;;7672:65;;7662:93;;7751:1;7748;7741:12;7662:93;7561:200;;;:::o;7766:2511::-;7863:6;7916:2;7904:9;7895:7;7891:23;7887:32;7884:52;;;7932:1;7929;7922:12;7884:52;7965:9;7959:16;7994:18;8035:2;8027:6;8024:14;8021:34;;;8051:1;8048;8041:12;8021:34;8074:22;;;;8130:4;8112:16;;;8108:27;8105:47;;;8148:1;8145;8138:12;8105:47;8174:22;;:::i;:::-;8227:2;8221:9;8255:2;8245:8;8242:16;8239:36;;;8271:1;8268;8261:12;8239:36;8294:17;;8342:4;8334:13;;8330:27;-1:-1:-1;8320:55:68;;8371:1;8368;8361:12;8320:55;8400:2;8394:9;8423:71;8439:54;8490:2;8439:54;:::i;:::-;8423:71;:::i;:::-;8516:3;8540:2;8535:3;8528:15;8568:2;8563:3;8559:12;8552:19;;8619:2;8613;8610:1;8606:10;8602:2;8598:19;8594:28;8580:42;;8645:7;8637:6;8634:19;8631:39;;;8666:1;8663;8656:12;8631:39;8698:2;8694;8690:11;8710:1457;8726:6;8721:3;8718:15;8710:1457;;;8805:3;8799:10;8841:2;8828:11;8825:19;8822:39;;;8857:1;8854;8847:12;8822:39;8884:20;;9015:4;8928:16;;;-1:-1:-1;;8924:89:68;8920:100;8917:120;;;9033:1;9030;9023:12;8917:120;9065:22;;:::i;:::-;9116:42;9154:2;9150;9146:11;9116:42;:::i;:::-;9107:7;9100:59;9211:4;9207:2;9203:13;9197:20;9192:2;9183:7;9179:16;9172:46;9272:2;9268;9264:11;9258:18;9251:4;9242:7;9238:18;9231:46;9320:4;9316:2;9312:13;9306:20;9355:2;9345:8;9342:16;9339:36;;;9371:1;9368;9361:12;9339:36;9406:8;9402:2;9398:17;9388:27;;;9455:7;9450:2;9446;9442:11;9438:25;9428:53;;9477:1;9474;9467:12;9428:53;9518:2;9514;9510:11;9504:18;9548:71;9564:54;9615:2;9564:54;:::i;9548:71::-;9663:17;;;9761:1;9757:10;;;;9749:19;;9770:4;9745:30;;9713:2;9702:14;;;9791:21;;;9788:41;;;9825:1;9822;9815:12;9788:41;9863:4;9859:2;9855:13;9842:26;;9881:167;9899:8;9892:5;9889:19;9881:167;;;9981:12;;9967:27;;10031:2;9920:14;;;;10020;;;;9881:167;;;10081:2;10068:16;;10061:31;-1:-1:-1;;10105:20:68;;-1:-1:-1;10154:2:68;10145:12;;;;8743;8710:1457;;;-1:-1:-1;10176:20:68;;-1:-1:-1;;;10242:2:68;10234:11;;;10228:18;10212:14;;;10205:42;;;;-1:-1:-1;10183:5:68;7766:2511;-1:-1:-1;;;7766:2511:68:o;11390:184::-;11442:77;11439:1;11432:88;11539:4;11536:1;11529:15;11563:4;11560:1;11553:15;11832:435;11885:3;11923:5;11917:12;11950:6;11945:3;11938:19;11976:4;12005:2;12000:3;11996:12;11989:19;;12042:2;12035:5;12031:14;12063:1;12073:169;12087:6;12084:1;12081:13;12073:169;;;12148:13;;12136:26;;12182:12;;;;12217:15;;;;12109:1;12102:9;12073:169;;;-1:-1:-1;12258:3:68;;11832:435;-1:-1:-1;;;;;11832:435:68:o;12272:484::-;12543:6;12532:9;12525:25;12586:6;12581:2;12570:9;12566:18;12559:34;12629:6;12624:2;12613:9;12609:18;12602:34;12672:3;12667:2;12656:9;12652:18;12645:31;12506:4;12693:57;12745:3;12734:9;12730:19;12722:6;12693:57;:::i;:::-;12685:65;12272:484;-1:-1:-1;;;;;;12272:484:68:o;12761:184::-;12831:6;12884:2;12872:9;12863:7;12859:23;12855:32;12852:52;;;12900:1;12897;12890:12;12852:52;-1:-1:-1;12923:16:68;;12761:184;-1:-1:-1;12761:184:68:o;14071:382::-;14111:7;14237:1;14169:66;14165:74;14162:1;14159:81;14154:1;14147:9;14140:17;14136:105;14133:285;;;14274:77;14271:1;14264:88;14375:4;14372:1;14365:15;14403:4;14400:1;14393:15;14133:285;-1:-1:-1;14438:9:68;;14071:382::o;14947:164::-;15023:13;;15072;;15065:21;15055:32;;15045:60;;15101:1;15098;15091:12;15116:175;15194:13;;15247:18;15236:30;;15226:41;;15216:69;;15281:1;15278;15271:12;15296:1075;15395:6;15448:3;15436:9;15427:7;15423:23;15419:33;15416:53;;;15465:1;15462;15455:12;15416:53;15491:22;;:::i;:::-;15536:37;15563:9;15536:37;:::i;:::-;15529:5;15522:52;15606:46;15648:2;15637:9;15633:18;15606:46;:::i;:::-;15601:2;15594:5;15590:14;15583:70;15706:2;15695:9;15691:18;15685:25;15680:2;15673:5;15669:14;15662:49;15743:48;15787:2;15776:9;15772:18;15743:48;:::i;:::-;15738:2;15731:5;15727:14;15720:72;15825:49;15869:3;15858:9;15854:19;15825:49;:::i;:::-;15819:3;15812:5;15808:15;15801:74;15908:49;15952:3;15941:9;15937:19;15908:49;:::i;:::-;15902:3;15895:5;15891:15;15884:74;15991:49;16035:3;16024:9;16020:19;15991:49;:::i;:::-;15985:3;15974:15;;15967:74;16095:3;16080:19;;;16074:26;16057:15;;;16050:51;16120:3;16161:18;;;16155:25;16139:14;;;16132:49;16200:3;16241:18;;;16235:25;16219:14;;;16212:49;16280:3;16321:18;;;16315:25;16299:14;;;16292:49;;;;-1:-1:-1;15978:5:68;15296:1075;-1:-1:-1;15296:1075:68:o;16566:208::-;16636:6;16689:2;16677:9;16668:7;16664:23;16660:32;16657:52;;;16705:1;16702;16695:12;16657:52;16728:40;16758:9;16728:40;:::i;:::-;16718:50;16566:208;-1:-1:-1;;;16566:208:68:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_FUNDS_RECIPIENT_ADDRESS()": "11568985",
    "DEFAULT_OWNER_ADDRESS()": "7168d231",
    "DEFAULT_ZORA_DAO_ADDRESS()": "dcf0738a",
    "IS_TEST()": "fa7626d4",
    "dummyRenderer()": "63e48e21",
    "failed()": "ba414fa6",
    "feeManager()": "d0fb0203",
    "mediaContract()": "4e21f9c0",
    "merkleData()": "b366933d",
    "setUp()": "0a9254e4",
    "test_MerklePurchaseActiveSuccess()": "568dcf5c",
    "test_MerklePurchaseAndPublicSaleEditionSizeZero()": "9e66713a",
    "test_MerklePurchaseAndPublicSalePurchaseLimits()": "428fe4ce",
    "test_MerklePurchaseInactiveFails()": "11709b36",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "/Users/iain/zora/zora-nft-contracts/test/merkle/MerkleDrop.t.sol",
    "id": 13559,
    "exportedSymbols": {
      "DSTest": [
        3150
      ],
      "DummyMetadataRenderer": [
        14610
      ],
      "ERC721Drop": [
        7601
      ],
      "ERC721DropProxy": [
        7621
      ],
      "FactoryUpgradeGate": [
        7765
      ],
      "IERC721Drop": [
        8397
      ],
      "MerkleData": [
        12715
      ],
      "Vm": [
        3337
      ],
      "ZoraFeeManager": [
        7867
      ],
      "ZoraNFTBaseTest": [
        13558
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:9117:61",
    "nodes": [
      {
        "id": 12717,
        "nodeType": "PragmaDirective",
        "src": "32:23:61",
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 12719,
        "nodeType": "ImportDirective",
        "src": "57:36:61",
        "absolutePath": "/Users/iain/zora/zora-nft-contracts/lib/forge-std/src/Vm.sol",
        "file": "forge-std/Vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13559,
        "sourceUnit": 3338,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12718,
              "name": "Vm",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "65:2:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12721,
        "nodeType": "ImportDirective",
        "src": "94:40:61",
        "absolutePath": "/Users/iain/zora/zora-nft-contracts/lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13559,
        "sourceUnit": 3151,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12720,
              "name": "DSTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "102:6:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12723,
        "nodeType": "ImportDirective",
        "src": "135:65:61",
        "absolutePath": "/Users/iain/zora/zora-nft-contracts/src/interfaces/IERC721Drop.sol",
        "file": "../../src/interfaces/IERC721Drop.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13559,
        "sourceUnit": 8398,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12722,
              "name": "IERC721Drop",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "143:11:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12725,
        "nodeType": "ImportDirective",
        "src": "201:52:61",
        "absolutePath": "/Users/iain/zora/zora-nft-contracts/src/ERC721Drop.sol",
        "file": "../../src/ERC721Drop.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13559,
        "sourceUnit": 7602,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12724,
              "name": "ERC721Drop",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "209:10:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12727,
        "nodeType": "ImportDirective",
        "src": "254:60:61",
        "absolutePath": "/Users/iain/zora/zora-nft-contracts/src/ZoraFeeManager.sol",
        "file": "../../src/ZoraFeeManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13559,
        "sourceUnit": 7868,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12726,
              "name": "ZoraFeeManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "262:14:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12729,
        "nodeType": "ImportDirective",
        "src": "315:73:61",
        "absolutePath": "/Users/iain/zora/zora-nft-contracts/test/utils/DummyMetadataRenderer.sol",
        "file": "../utils/DummyMetadataRenderer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13559,
        "sourceUnit": 14611,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12728,
              "name": "DummyMetadataRenderer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "323:21:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12731,
        "nodeType": "ImportDirective",
        "src": "389:68:61",
        "absolutePath": "/Users/iain/zora/zora-nft-contracts/src/FactoryUpgradeGate.sol",
        "file": "../../src/FactoryUpgradeGate.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13559,
        "sourceUnit": 7766,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12730,
              "name": "FactoryUpgradeGate",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "397:18:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12733,
        "nodeType": "ImportDirective",
        "src": "458:62:61",
        "absolutePath": "/Users/iain/zora/zora-nft-contracts/src/ERC721DropProxy.sol",
        "file": "../../src/ERC721DropProxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13559,
        "sourceUnit": 7622,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12732,
              "name": "ERC721DropProxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "466:15:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12735,
        "nodeType": "ImportDirective",
        "src": "522:44:61",
        "absolutePath": "/Users/iain/zora/zora-nft-contracts/test/merkle/MerkleData.sol",
        "file": "./MerkleData.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13559,
        "sourceUnit": 12716,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12734,
              "name": "MerkleData",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "530:10:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13558,
        "nodeType": "ContractDefinition",
        "src": "568:8580:61",
        "nodes": [
          {
            "id": 12740,
            "nodeType": "VariableDeclaration",
            "src": "609:22:61",
            "constant": false,
            "mutability": "mutable",
            "name": "zoraNFTBase",
            "nameLocation": "620:11:61",
            "scope": 13558,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC721Drop_$7601",
              "typeString": "contract ERC721Drop"
            },
            "typeName": {
              "id": 12739,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12738,
                "name": "ERC721Drop",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 7601,
                "src": "609:10:61"
              },
              "referencedDeclaration": 7601,
              "src": "609:10:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                "typeString": "contract ERC721Drop"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 12746,
            "nodeType": "VariableDeclaration",
            "src": "637:40:61",
            "constant": true,
            "functionSelector": "3a768463",
            "mutability": "constant",
            "name": "vm",
            "nameLocation": "656:2:61",
            "scope": 13558,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Vm_$3337",
              "typeString": "contract Vm"
            },
            "typeName": {
              "id": 12742,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12741,
                "name": "Vm",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3337,
                "src": "637:2:61"
              },
              "referencedDeclaration": 3337,
              "src": "637:2:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$3337",
                "typeString": "contract Vm"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 12744,
                  "name": "HEVM_ADDRESS",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1577,
                  "src": "664:12:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 12743,
                "name": "Vm",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 3337,
                "src": "661:2:61",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Vm_$3337_$",
                  "typeString": "type(contract Vm)"
                }
              },
              "id": 12745,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "661:16:61",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$3337",
                "typeString": "contract Vm"
              }
            },
            "visibility": "public"
          },
          {
            "id": 12753,
            "nodeType": "VariableDeclaration",
            "src": "683:72:61",
            "constant": false,
            "functionSelector": "63e48e21",
            "mutability": "mutable",
            "name": "dummyRenderer",
            "nameLocation": "712:13:61",
            "scope": 13558,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DummyMetadataRenderer_$14610",
              "typeString": "contract DummyMetadataRenderer"
            },
            "typeName": {
              "id": 12748,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12747,
                "name": "DummyMetadataRenderer",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 14610,
                "src": "683:21:61"
              },
              "referencedDeclaration": 14610,
              "src": "683:21:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DummyMetadataRenderer_$14610",
                "typeString": "contract DummyMetadataRenderer"
              }
            },
            "value": {
              "arguments": [],
              "expression": {
                "argumentTypes": [],
                "id": 12751,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "728:25:61",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_DummyMetadataRenderer_$14610_$",
                  "typeString": "function () returns (contract DummyMetadataRenderer)"
                },
                "typeName": {
                  "id": 12750,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 12749,
                    "name": "DummyMetadataRenderer",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 14610,
                    "src": "732:21:61"
                  },
                  "referencedDeclaration": 14610,
                  "src": "732:21:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DummyMetadataRenderer_$14610",
                    "typeString": "contract DummyMetadataRenderer"
                  }
                }
              },
              "id": 12752,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "728:27:61",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DummyMetadataRenderer_$14610",
                "typeString": "contract DummyMetadataRenderer"
              }
            },
            "visibility": "public"
          },
          {
            "id": 12756,
            "nodeType": "VariableDeclaration",
            "src": "761:32:61",
            "constant": false,
            "functionSelector": "d0fb0203",
            "mutability": "mutable",
            "name": "feeManager",
            "nameLocation": "783:10:61",
            "scope": 13558,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ZoraFeeManager_$7867",
              "typeString": "contract ZoraFeeManager"
            },
            "typeName": {
              "id": 12755,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12754,
                "name": "ZoraFeeManager",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 7867,
                "src": "761:14:61"
              },
              "referencedDeclaration": 7867,
              "src": "761:14:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZoraFeeManager_$7867",
                "typeString": "contract ZoraFeeManager"
              }
            },
            "visibility": "public"
          },
          {
            "id": 12759,
            "nodeType": "VariableDeclaration",
            "src": "799:28:61",
            "constant": false,
            "functionSelector": "b366933d",
            "mutability": "mutable",
            "name": "merkleData",
            "nameLocation": "817:10:61",
            "scope": 13558,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MerkleData_$12715",
              "typeString": "contract MerkleData"
            },
            "typeName": {
              "id": 12758,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12757,
                "name": "MerkleData",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12715,
                "src": "799:10:61"
              },
              "referencedDeclaration": 12715,
              "src": "799:10:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MerkleData_$12715",
                "typeString": "contract MerkleData"
              }
            },
            "visibility": "public"
          },
          {
            "id": 12765,
            "nodeType": "VariableDeclaration",
            "src": "833:64:61",
            "constant": true,
            "functionSelector": "7168d231",
            "mutability": "constant",
            "name": "DEFAULT_OWNER_ADDRESS",
            "nameLocation": "857:21:61",
            "scope": 13558,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12760,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "833:7:61",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "30783233343939",
                  "id": 12763,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "889:7:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_144537_by_1",
                    "typeString": "int_const 144537"
                  },
                  "value": "0x23499"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_144537_by_1",
                    "typeString": "int_const 144537"
                  }
                ],
                "id": 12762,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "881:7:61",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 12761,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "881:7:61",
                  "typeDescriptions": {}
                }
              },
              "id": 12764,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "881:16:61",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 12774,
            "nodeType": "VariableDeclaration",
            "src": "903:99:61",
            "constant": true,
            "functionSelector": "11568985",
            "mutability": "constant",
            "name": "DEFAULT_FUNDS_RECIPIENT_ADDRESS",
            "nameLocation": "935:31:61",
            "scope": 13558,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 12766,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "903:15:61",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "30783231333033",
                      "id": 12771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "993:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_135939_by_1",
                        "typeString": "int_const 135939"
                      },
                      "value": "0x21303"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_135939_by_1",
                        "typeString": "int_const 135939"
                      }
                    ],
                    "id": 12770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "985:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 12769,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "985:7:61",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 12772,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "985:16:61",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 12768,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "977:8:61",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 12767,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "977:8:61",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 12773,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "977:25:61",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 12783,
            "nodeType": "VariableDeclaration",
            "src": "1008:90:61",
            "constant": true,
            "functionSelector": "dcf0738a",
            "mutability": "constant",
            "name": "DEFAULT_ZORA_DAO_ADDRESS",
            "nameLocation": "1040:24:61",
            "scope": 13558,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 12775,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1008:15:61",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "3078393939",
                      "id": 12780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1091:5:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2457_by_1",
                        "typeString": "int_const 2457"
                      },
                      "value": "0x999"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_2457_by_1",
                        "typeString": "int_const 2457"
                      }
                    ],
                    "id": 12779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1083:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 12778,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1083:7:61",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 12781,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1083:14:61",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 12777,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1075:8:61",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 12776,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1075:8:61",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 12782,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1075:23:61",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 12789,
            "nodeType": "VariableDeclaration",
            "src": "1104:57:61",
            "constant": true,
            "functionSelector": "4e21f9c0",
            "mutability": "constant",
            "name": "mediaContract",
            "nameLocation": "1128:13:61",
            "scope": 13558,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12784,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1104:7:61",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "3078313233343536",
                  "id": 12787,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1152:8:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1193046_by_1",
                    "typeString": "int_const 1193046"
                  },
                  "value": "0x123456"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_1193046_by_1",
                    "typeString": "int_const 1193046"
                  }
                ],
                "id": 12786,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1144:7:61",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 12785,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1144:7:61",
                  "typeDescriptions": {}
                }
              },
              "id": 12788,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1144:17:61",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 12822,
            "nodeType": "ModifierDefinition",
            "src": "1168:770:61",
            "body": {
              "id": 12821,
              "nodeType": "Block",
              "src": "1196:742:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "54657374204e4654",
                        "id": 12794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1258:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_399b3b8e1a607e38a806dbdb386c84217e0a0255dd7cc2a55c6afb0aaffe0822",
                          "typeString": "literal_string \"Test NFT\""
                        },
                        "value": "Test NFT"
                      },
                      {
                        "hexValue": "544e4654",
                        "id": 12795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1299:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4bf4639f4809295b3818b7ece4077b3fa27a3ec42260477c85e0da55c64ce4f5",
                          "typeString": "literal_string \"TNFT\""
                        },
                        "value": "TNFT"
                      },
                      {
                        "id": 12796,
                        "name": "DEFAULT_OWNER_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12765,
                        "src": "1334:21:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 12799,
                            "name": "DEFAULT_FUNDS_RECIPIENT_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12774,
                            "src": "1394:31:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 12798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1386:8:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 12797,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1386:8:61",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1386:40:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 12801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1454:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "383030",
                        "id": 12802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1483:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_800_by_1",
                          "typeString": "int_const 800"
                        },
                        "value": "800"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 12805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1580:1:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 12806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1614:1:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 12807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1647:1:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 12808,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1678:1:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 12809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1714:1:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 12810,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1760:1:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 12813,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1806:1:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 12812,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1798:7:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 12811,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "1798:7:61",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 12814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1798:10:61",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 12803,
                            "name": "IERC721Drop",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8397,
                            "src": "1514:11:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC721Drop_$8397_$",
                              "typeString": "type(contract IERC721Drop)"
                            }
                          },
                          "id": 12804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "SalesConfiguration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8291,
                          "src": "1514:30:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SalesConfiguration_$8291_storage_ptr_$",
                            "typeString": "type(struct IERC721Drop.SalesConfiguration storage pointer)"
                          }
                        },
                        "id": 12815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "publicSaleStart",
                          "publicSaleEnd",
                          "presaleStart",
                          "presaleEnd",
                          "publicSalePrice",
                          "maxSalePurchasePerAddress",
                          "presaleMerkleRoot"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "1514:309:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SalesConfiguration_$8291_memory_ptr",
                          "typeString": "struct IERC721Drop.SalesConfiguration memory"
                        }
                      },
                      {
                        "id": 12816,
                        "name": "dummyRenderer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12753,
                        "src": "1856:13:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DummyMetadataRenderer_$14610",
                          "typeString": "contract DummyMetadataRenderer"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 12817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1906:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_399b3b8e1a607e38a806dbdb386c84217e0a0255dd7cc2a55c6afb0aaffe0822",
                          "typeString": "literal_string \"Test NFT\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4bf4639f4809295b3818b7ece4077b3fa27a3ec42260477c85e0da55c64ce4f5",
                          "typeString": "literal_string \"TNFT\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_800_by_1",
                          "typeString": "int_const 800"
                        },
                        {
                          "typeIdentifier": "t_struct$_SalesConfiguration_$8291_memory_ptr",
                          "typeString": "struct IERC721Drop.SalesConfiguration memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_DummyMetadataRenderer_$14610",
                          "typeString": "contract DummyMetadataRenderer"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 12791,
                        "name": "zoraNFTBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12740,
                        "src": "1206:11:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                          "typeString": "contract ERC721Drop"
                        }
                      },
                      "id": 12793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6753,
                      "src": "1206:22:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_address_payable_$_t_uint64_$_t_uint16_$_t_struct$_SalesConfiguration_$8291_memory_ptr_$_t_contract$_IMetadataRenderer_$8444_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,address,address payable,uint64,uint16,struct IERC721Drop.SalesConfiguration memory,contract IMetadataRenderer,bytes memory) external"
                      }
                    },
                    "id": 12818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "_contractName",
                      "_contractSymbol",
                      "_initialOwner",
                      "_fundsRecipient",
                      "_editionSize",
                      "_royaltyBPS",
                      "_salesConfig",
                      "_metadataRenderer",
                      "_metadataRendererInit"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1206:713:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12819,
                  "nodeType": "ExpressionStatement",
                  "src": "1206:713:61"
                },
                {
                  "id": 12820,
                  "nodeType": "PlaceholderStatement",
                  "src": "1930:1:61"
                }
              ]
            },
            "name": "setupZoraNFTBase",
            "nameLocation": "1177:16:61",
            "parameters": {
              "id": 12790,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1193:2:61"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 12896,
            "nodeType": "FunctionDefinition",
            "src": "1944:548:61",
            "body": {
              "id": 12895,
              "nodeType": "Block",
              "src": "1968:524:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12828,
                        "name": "DEFAULT_ZORA_DAO_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12783,
                        "src": "1987:24:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 12825,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "1978:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 12827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3224,
                      "src": "1978:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 12829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1978:34:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12830,
                  "nodeType": "ExpressionStatement",
                  "src": "1978:34:61"
                },
                {
                  "expression": {
                    "id": 12838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12831,
                      "name": "feeManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12756,
                      "src": "2022:10:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ZoraFeeManager_$7867",
                        "typeString": "contract ZoraFeeManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "323530",
                          "id": 12835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2054:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_250_by_1",
                            "typeString": "int_const 250"
                          },
                          "value": "250"
                        },
                        {
                          "id": 12836,
                          "name": "DEFAULT_ZORA_DAO_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12783,
                          "src": "2059:24:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_250_by_1",
                            "typeString": "int_const 250"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 12834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2035:18:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_address_$returns$_t_contract$_ZoraFeeManager_$7867_$",
                          "typeString": "function (uint256,address) returns (contract ZoraFeeManager)"
                        },
                        "typeName": {
                          "id": 12833,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 12832,
                            "name": "ZoraFeeManager",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 7867,
                            "src": "2039:14:61"
                          },
                          "referencedDeclaration": 7867,
                          "src": "2039:14:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ZoraFeeManager_$7867",
                            "typeString": "contract ZoraFeeManager"
                          }
                        }
                      },
                      "id": 12837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2035:49:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ZoraFeeManager_$7867",
                        "typeString": "contract ZoraFeeManager"
                      }
                    },
                    "src": "2022:62:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ZoraFeeManager_$7867",
                      "typeString": "contract ZoraFeeManager"
                    }
                  },
                  "id": 12839,
                  "nodeType": "ExpressionStatement",
                  "src": "2022:62:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12843,
                        "name": "DEFAULT_ZORA_DAO_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12783,
                        "src": "2103:24:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 12840,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "2094:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 12842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3224,
                      "src": "2094:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 12844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2094:34:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12845,
                  "nodeType": "ExpressionStatement",
                  "src": "2094:34:61"
                },
                {
                  "assignments": [
                    12847
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12847,
                      "mutability": "mutable",
                      "name": "impl",
                      "nameLocation": "2147:4:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 12895,
                      "src": "2139:12:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 12846,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2139:7:61",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12866,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 12853,
                            "name": "feeManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12756,
                            "src": "2207:10:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZoraFeeManager_$7867",
                              "typeString": "contract ZoraFeeManager"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "31323334",
                                "id": 12856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2243:4:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1234_by_1",
                                  "typeString": "int_const 1234"
                                },
                                "value": "1234"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1234_by_1",
                                  "typeString": "int_const 1234"
                                }
                              ],
                              "id": 12855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2235:7:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 12854,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2235:7:61",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 12857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2235:13:61",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 12861,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2293:1:61",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 12860,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2285:7:61",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 12859,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2285:7:61",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 12862,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2285:10:61",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 12858,
                              "name": "FactoryUpgradeGate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7765,
                              "src": "2266:18:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_FactoryUpgradeGate_$7765_$",
                                "typeString": "type(contract FactoryUpgradeGate)"
                              }
                            },
                            "id": 12863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2266:30:61",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FactoryUpgradeGate_$7765",
                              "typeString": "contract FactoryUpgradeGate"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ZoraFeeManager_$7867",
                              "typeString": "contract ZoraFeeManager"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_contract$_FactoryUpgradeGate_$7765",
                              "typeString": "contract FactoryUpgradeGate"
                            }
                          ],
                          "id": 12852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "2175:14:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IZoraFeeManager_$8500_$_t_address_$_t_contract$_FactoryUpgradeGate_$7765_$returns$_t_contract$_ERC721Drop_$7601_$",
                            "typeString": "function (contract IZoraFeeManager,address,contract FactoryUpgradeGate) returns (contract ERC721Drop)"
                          },
                          "typeName": {
                            "id": 12851,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 12850,
                              "name": "ERC721Drop",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 7601,
                              "src": "2179:10:61"
                            },
                            "referencedDeclaration": 7601,
                            "src": "2179:10:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                              "typeString": "contract ERC721Drop"
                            }
                          }
                        },
                        "id": 12864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2175:135:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                          "typeString": "contract ERC721Drop"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                          "typeString": "contract ERC721Drop"
                        }
                      ],
                      "id": 12849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2154:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 12848,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2154:7:61",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 12865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2154:166:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2139:181:61"
                },
                {
                  "assignments": [
                    12868
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12868,
                      "mutability": "mutable",
                      "name": "newDrop",
                      "nameLocation": "2346:7:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 12895,
                      "src": "2330:23:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 12867,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2330:15:61",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12881,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 12876,
                                "name": "impl",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12847,
                                "src": "2392:4:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "",
                                "id": 12877,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2398:2:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "id": 12875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "2372:19:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC721DropProxy_$7621_$",
                                "typeString": "function (address,bytes memory) payable returns (contract ERC721DropProxy)"
                              },
                              "typeName": {
                                "id": 12874,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 12873,
                                  "name": "ERC721DropProxy",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 7621,
                                  "src": "2376:15:61"
                                },
                                "referencedDeclaration": 7621,
                                "src": "2376:15:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC721DropProxy_$7621",
                                  "typeString": "contract ERC721DropProxy"
                                }
                              }
                            },
                            "id": 12878,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2372:29:61",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721DropProxy_$7621",
                              "typeString": "contract ERC721DropProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC721DropProxy_$7621",
                              "typeString": "contract ERC721DropProxy"
                            }
                          ],
                          "id": 12872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2364:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12871,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2364:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2364:38:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2356:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 12869,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2356:8:61",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 12880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2356:47:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2330:73:61"
                },
                {
                  "expression": {
                    "id": 12886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12882,
                      "name": "zoraNFTBase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12740,
                      "src": "2413:11:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                        "typeString": "contract ERC721Drop"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 12884,
                          "name": "newDrop",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12868,
                          "src": "2438:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 12883,
                        "name": "ERC721Drop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7601,
                        "src": "2427:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Drop_$7601_$",
                          "typeString": "type(contract ERC721Drop)"
                        }
                      },
                      "id": 12885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2427:19:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                        "typeString": "contract ERC721Drop"
                      }
                    },
                    "src": "2413:33:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                      "typeString": "contract ERC721Drop"
                    }
                  },
                  "id": 12887,
                  "nodeType": "ExpressionStatement",
                  "src": "2413:33:61"
                },
                {
                  "expression": {
                    "id": 12893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12888,
                      "name": "merkleData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12759,
                      "src": "2456:10:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MerkleData_$12715",
                        "typeString": "contract MerkleData"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 12891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2469:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MerkleData_$12715_$",
                          "typeString": "function () returns (contract MerkleData)"
                        },
                        "typeName": {
                          "id": 12890,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 12889,
                            "name": "MerkleData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 12715,
                            "src": "2473:10:61"
                          },
                          "referencedDeclaration": 12715,
                          "src": "2473:10:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MerkleData_$12715",
                            "typeString": "contract MerkleData"
                          }
                        }
                      },
                      "id": 12892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2469:16:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MerkleData_$12715",
                        "typeString": "contract MerkleData"
                      }
                    },
                    "src": "2456:29:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MerkleData_$12715",
                      "typeString": "contract MerkleData"
                    }
                  },
                  "id": 12894,
                  "nodeType": "ExpressionStatement",
                  "src": "2456:29:61"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1953:5:61",
            "parameters": {
              "id": 12823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1958:2:61"
            },
            "returnParameters": {
              "id": 12824,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1968:0:61"
            },
            "scope": 13558,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13103,
            "nodeType": "FunctionDefinition",
            "src": "2498:1795:61",
            "body": {
              "id": 13102,
              "nodeType": "Block",
              "src": "2566:1727:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12904,
                        "name": "DEFAULT_OWNER_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12765,
                        "src": "2590:21:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 12901,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "2576:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 12903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3229,
                      "src": "2576:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 12905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2576:36:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12906,
                  "nodeType": "ExpressionStatement",
                  "src": "2576:36:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 12910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2686:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 12911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2716:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 12912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2745:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 12915,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2777:6:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": {
                                "id": 12914,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "2777:6:61",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              }
                            ],
                            "id": 12913,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2772:4:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 12916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2772:12:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint64",
                            "typeString": "type(uint64)"
                          }
                        },
                        "id": 12917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "2772:16:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 12918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2819:7:61",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 12919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2867:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "746573742d332d616464726573736573",
                              "id": 12922,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2946:18:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_77694de0fe7c7e819b10ee34112a73358be466096b29e5a9a2eddfa55b948ef5",
                                "typeString": "literal_string \"test-3-addresses\""
                              },
                              "value": "test-3-addresses"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_77694de0fe7c7e819b10ee34112a73358be466096b29e5a9a2eddfa55b948ef5",
                                "typeString": "literal_string \"test-3-addresses\""
                              }
                            ],
                            "expression": {
                              "id": 12920,
                              "name": "merkleData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12759,
                              "src": "2901:10:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MerkleData_$12715",
                                "typeString": "contract MerkleData"
                              }
                            },
                            "id": 12921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getTestSetByName",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12455,
                            "src": "2901:44:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_struct$_TestData_$12437_memory_ptr_$",
                              "typeString": "function (string memory) view external returns (struct MerkleData.TestData memory)"
                            }
                          },
                          "id": 12923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2901:64:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestData_$12437_memory_ptr",
                            "typeString": "struct MerkleData.TestData memory"
                          }
                        },
                        "id": 12924,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "root",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12436,
                        "src": "2901:86:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 12907,
                        "name": "zoraNFTBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12740,
                        "src": "2622:11:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                          "typeString": "contract ERC721Drop"
                        }
                      },
                      "id": 12909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setSaleConfiguration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7338,
                      "src": "2622:32:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint104_$_t_uint32_$_t_uint64_$_t_uint64_$_t_uint64_$_t_uint64_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint104,uint32,uint64,uint64,uint64,uint64,bytes32) external"
                      }
                    },
                    "id": 12925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "publicSaleStart",
                      "publicSaleEnd",
                      "presaleStart",
                      "presaleEnd",
                      "publicSalePrice",
                      "maxSalePurchasePerAddress",
                      "presaleMerkleRoot"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2622:376:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12926,
                  "nodeType": "ExpressionStatement",
                  "src": "2622:376:61"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 12927,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "3008:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 12929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3246,
                      "src": "3008:12:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 12930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3008:14:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12931,
                  "nodeType": "ExpressionStatement",
                  "src": "3008:14:61"
                },
                {
                  "assignments": [
                    12936
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12936,
                      "mutability": "mutable",
                      "name": "item",
                      "nameLocation": "3063:4:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 13102,
                      "src": "3033:34:61",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                        "typeString": "struct MerkleData.MerkleEntry"
                      },
                      "typeName": {
                        "id": 12935,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 12934,
                          "name": "MerkleData.MerkleEntry",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12430,
                          "src": "3033:22:61"
                        },
                        "referencedDeclaration": 12430,
                        "src": "3033:22:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleEntry_$12430_storage_ptr",
                          "typeString": "struct MerkleData.MerkleEntry"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12937,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3033:34:61"
                },
                {
                  "expression": {
                    "id": 12946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12938,
                      "name": "item",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12936,
                      "src": "3078:4:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                        "typeString": "struct MerkleData.MerkleEntry memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "746573742d332d616464726573736573",
                              "id": 12941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3113:18:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_77694de0fe7c7e819b10ee34112a73358be466096b29e5a9a2eddfa55b948ef5",
                                "typeString": "literal_string \"test-3-addresses\""
                              },
                              "value": "test-3-addresses"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_77694de0fe7c7e819b10ee34112a73358be466096b29e5a9a2eddfa55b948ef5",
                                "typeString": "literal_string \"test-3-addresses\""
                              }
                            ],
                            "expression": {
                              "id": 12939,
                              "name": "merkleData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12759,
                              "src": "3085:10:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MerkleData_$12715",
                                "typeString": "contract MerkleData"
                              }
                            },
                            "id": 12940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getTestSetByName",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12455,
                            "src": "3085:27:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_struct$_TestData_$12437_memory_ptr_$",
                              "typeString": "function (string memory) view external returns (struct MerkleData.TestData memory)"
                            }
                          },
                          "id": 12942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3085:47:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestData_$12437_memory_ptr",
                            "typeString": "struct MerkleData.TestData memory"
                          }
                        },
                        "id": 12943,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "entries",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12434,
                        "src": "3085:55:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MerkleEntry_$12430_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct MerkleData.MerkleEntry memory[] memory"
                        }
                      },
                      "id": 12945,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 12944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3141:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3085:58:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                        "typeString": "struct MerkleData.MerkleEntry memory"
                      }
                    },
                    "src": "3078:65:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                      "typeString": "struct MerkleData.MerkleEntry memory"
                    }
                  },
                  "id": 12947,
                  "nodeType": "ExpressionStatement",
                  "src": "3078:65:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 12953,
                              "name": "item",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12936,
                              "src": "3169:4:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                                "typeString": "struct MerkleData.MerkleEntry memory"
                              }
                            },
                            "id": 12954,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "user",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12422,
                            "src": "3169:9:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 12952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3161:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12951,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3161:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3161:18:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 12956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3181:7:61",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 12948,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "3153:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 12950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3253,
                      "src": "3153:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 12957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3153:36:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12958,
                  "nodeType": "ExpressionStatement",
                  "src": "3153:36:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 12964,
                              "name": "item",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12936,
                              "src": "3221:4:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                                "typeString": "struct MerkleData.MerkleEntry memory"
                              }
                            },
                            "id": 12965,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "user",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12422,
                            "src": "3221:9:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 12963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3213:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12962,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3213:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3213:18:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 12959,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "3199:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 12961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3229,
                      "src": "3199:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 12967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3199:33:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12968,
                  "nodeType": "ExpressionStatement",
                  "src": "3199:33:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 12975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3307:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "expression": {
                          "id": 12976,
                          "name": "item",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12936,
                          "src": "3322:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                            "typeString": "struct MerkleData.MerkleEntry memory"
                          }
                        },
                        "id": 12977,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "maxMint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12424,
                        "src": "3322:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 12978,
                          "name": "item",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12936,
                          "src": "3348:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                            "typeString": "struct MerkleData.MerkleEntry memory"
                          }
                        },
                        "id": 12979,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mintPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12426,
                        "src": "3348:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 12980,
                          "name": "item",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12936,
                          "src": "3376:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                            "typeString": "struct MerkleData.MerkleEntry memory"
                          }
                        },
                        "id": 12981,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "proof",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12429,
                        "src": "3376:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        ],
                        "expression": {
                          "id": 12969,
                          "name": "zoraNFTBase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12740,
                          "src": "3243:11:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                            "typeString": "contract ERC721Drop"
                          }
                        },
                        "id": 12971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "purchasePresale",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7178,
                        "src": "3243:27:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,bytes32[] memory) payable external returns (uint256)"
                        }
                      },
                      "id": 12974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 12972,
                            "name": "item",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12936,
                            "src": "3278:4:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                              "typeString": "struct MerkleData.MerkleEntry memory"
                            }
                          },
                          "id": 12973,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mintPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12426,
                          "src": "3278:14:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "3243:50:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,uint256,uint256,bytes32[] memory) payable external returns (uint256)"
                      }
                    },
                    "id": 12982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3243:153:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12983,
                  "nodeType": "ExpressionStatement",
                  "src": "3243:153:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 12985,
                              "name": "zoraNFTBase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12740,
                              "src": "3415:11:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                                "typeString": "contract ERC721Drop"
                              }
                            },
                            "id": 12986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "saleDetails",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6875,
                            "src": "3415:23:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_SaleDetails_$8314_memory_ptr_$",
                              "typeString": "function () view external returns (struct IERC721Drop.SaleDetails memory)"
                            }
                          },
                          "id": 12987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3415:25:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SaleDetails_$8314_memory_ptr",
                            "typeString": "struct IERC721Drop.SaleDetails memory"
                          }
                        },
                        "id": 12988,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "maxSupply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8313,
                        "src": "3415:35:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 12989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3452:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 12984,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1684,
                        1709,
                        1739,
                        1764,
                        1823,
                        1848,
                        1878,
                        1903,
                        3003,
                        3038
                      ],
                      "referencedDeclaration": 1878,
                      "src": "3406:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 12990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3406:49:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12991,
                  "nodeType": "ExpressionStatement",
                  "src": "3406:49:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 12993,
                              "name": "zoraNFTBase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12740,
                              "src": "3474:11:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                                "typeString": "contract ERC721Drop"
                              }
                            },
                            "id": 12994,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "saleDetails",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6875,
                            "src": "3474:23:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_SaleDetails_$8314_memory_ptr_$",
                              "typeString": "function () view external returns (struct IERC721Drop.SaleDetails memory)"
                            }
                          },
                          "id": 12995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3474:25:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SaleDetails_$8314_memory_ptr",
                            "typeString": "struct IERC721Drop.SaleDetails memory"
                          }
                        },
                        "id": 12996,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalMinted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8311,
                        "src": "3474:37:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 12997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3513:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 12992,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1684,
                        1709,
                        1739,
                        1764,
                        1823,
                        1848,
                        1878,
                        1903,
                        3003,
                        3038
                      ],
                      "referencedDeclaration": 1878,
                      "src": "3465:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 12998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3465:50:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12999,
                  "nodeType": "ExpressionStatement",
                  "src": "3465:50:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 13003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3566:1:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 13001,
                              "name": "zoraNFTBase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12740,
                              "src": "3546:11:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                                "typeString": "contract ERC721Drop"
                              }
                            },
                            "id": 13002,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 339,
                            "src": "3546:19:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 13004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3546:22:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 13007,
                                "name": "item",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12936,
                                "src": "3580:4:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                                  "typeString": "struct MerkleData.MerkleEntry memory"
                                }
                              },
                              "id": 13008,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "user",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12422,
                              "src": "3580:9:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 13006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3572:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13005,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3572:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3572:18:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3546:44:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f776e65722069732077726f6e6720666f72206e6577206d696e74656420746f6b656e",
                        "id": 13011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3604:37:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbd120a333360b813e375a8cd2cce6b4aa19650379bb6bc5a1a3d1f7fc892c28",
                          "typeString": "literal_string \"owner is wrong for new minted token\""
                        },
                        "value": "owner is wrong for new minted token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbd120a333360b813e375a8cd2cce6b4aa19650379bb6bc5a1a3d1f7fc892c28",
                          "typeString": "literal_string \"owner is wrong for new minted token\""
                        }
                      ],
                      "id": 13000,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3525:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3525:126:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13013,
                  "nodeType": "ExpressionStatement",
                  "src": "3525:126:61"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 13014,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "3661:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3246,
                      "src": "3661:12:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 13017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3661:14:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13018,
                  "nodeType": "ExpressionStatement",
                  "src": "3661:14:61"
                },
                {
                  "expression": {
                    "id": 13027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13019,
                      "name": "item",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12936,
                      "src": "3686:4:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                        "typeString": "struct MerkleData.MerkleEntry memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "746573742d332d616464726573736573",
                              "id": 13022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3721:18:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_77694de0fe7c7e819b10ee34112a73358be466096b29e5a9a2eddfa55b948ef5",
                                "typeString": "literal_string \"test-3-addresses\""
                              },
                              "value": "test-3-addresses"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_77694de0fe7c7e819b10ee34112a73358be466096b29e5a9a2eddfa55b948ef5",
                                "typeString": "literal_string \"test-3-addresses\""
                              }
                            ],
                            "expression": {
                              "id": 13020,
                              "name": "merkleData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12759,
                              "src": "3693:10:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MerkleData_$12715",
                                "typeString": "contract MerkleData"
                              }
                            },
                            "id": 13021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getTestSetByName",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12455,
                            "src": "3693:27:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_struct$_TestData_$12437_memory_ptr_$",
                              "typeString": "function (string memory) view external returns (struct MerkleData.TestData memory)"
                            }
                          },
                          "id": 13023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3693:47:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestData_$12437_memory_ptr",
                            "typeString": "struct MerkleData.TestData memory"
                          }
                        },
                        "id": 13024,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "entries",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12434,
                        "src": "3693:55:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MerkleEntry_$12430_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct MerkleData.MerkleEntry memory[] memory"
                        }
                      },
                      "id": 13026,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 13025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3749:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3693:58:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                        "typeString": "struct MerkleData.MerkleEntry memory"
                      }
                    },
                    "src": "3686:65:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                      "typeString": "struct MerkleData.MerkleEntry memory"
                    }
                  },
                  "id": 13028,
                  "nodeType": "ExpressionStatement",
                  "src": "3686:65:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 13034,
                              "name": "item",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12936,
                              "src": "3777:4:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                                "typeString": "struct MerkleData.MerkleEntry memory"
                              }
                            },
                            "id": 13035,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "user",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12422,
                            "src": "3777:9:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3769:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13032,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3769:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3769:18:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 13037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3789:7:61",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13029,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "3761:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3253,
                      "src": "3761:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 13038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3761:36:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13039,
                  "nodeType": "ExpressionStatement",
                  "src": "3761:36:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 13045,
                              "name": "item",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12936,
                              "src": "3829:4:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                                "typeString": "struct MerkleData.MerkleEntry memory"
                              }
                            },
                            "id": 13046,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "user",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12422,
                            "src": "3829:9:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3821:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13043,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3821:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3821:18:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 13040,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "3807:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3229,
                      "src": "3807:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 13048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3807:33:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13049,
                  "nodeType": "ExpressionStatement",
                  "src": "3807:33:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 13058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3918:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "expression": {
                          "id": 13059,
                          "name": "item",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12936,
                          "src": "3933:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                            "typeString": "struct MerkleData.MerkleEntry memory"
                          }
                        },
                        "id": 13060,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "maxMint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12424,
                        "src": "3933:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 13061,
                          "name": "item",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12936,
                          "src": "3959:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                            "typeString": "struct MerkleData.MerkleEntry memory"
                          }
                        },
                        "id": 13062,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mintPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12426,
                        "src": "3959:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 13063,
                          "name": "item",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12936,
                          "src": "3987:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                            "typeString": "struct MerkleData.MerkleEntry memory"
                          }
                        },
                        "id": 13064,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "proof",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12429,
                        "src": "3987:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        ],
                        "expression": {
                          "id": 13050,
                          "name": "zoraNFTBase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12740,
                          "src": "3850:11:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                            "typeString": "contract ERC721Drop"
                          }
                        },
                        "id": 13052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "purchasePresale",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7178,
                        "src": "3850:27:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,bytes32[] memory) payable external returns (uint256)"
                        }
                      },
                      "id": 13057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 13056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 13053,
                              "name": "item",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12936,
                              "src": "3885:4:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                                "typeString": "struct MerkleData.MerkleEntry memory"
                              }
                            },
                            "id": 13054,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mintPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12426,
                            "src": "3885:14:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 13055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3902:1:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "3885:18:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "3850:54:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,uint256,uint256,bytes32[] memory) payable external returns (uint256)"
                      }
                    },
                    "id": 13065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3850:157:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13066,
                  "nodeType": "ExpressionStatement",
                  "src": "3850:157:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 13068,
                              "name": "zoraNFTBase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12740,
                              "src": "4026:11:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                                "typeString": "contract ERC721Drop"
                              }
                            },
                            "id": 13069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "saleDetails",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6875,
                            "src": "4026:23:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_SaleDetails_$8314_memory_ptr_$",
                              "typeString": "function () view external returns (struct IERC721Drop.SaleDetails memory)"
                            }
                          },
                          "id": 13070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4026:25:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SaleDetails_$8314_memory_ptr",
                            "typeString": "struct IERC721Drop.SaleDetails memory"
                          }
                        },
                        "id": 13071,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "maxSupply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8313,
                        "src": "4026:35:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 13072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4063:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 13067,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1684,
                        1709,
                        1739,
                        1764,
                        1823,
                        1848,
                        1878,
                        1903,
                        3003,
                        3038
                      ],
                      "referencedDeclaration": 1878,
                      "src": "4017:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4017:49:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13074,
                  "nodeType": "ExpressionStatement",
                  "src": "4017:49:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 13076,
                              "name": "zoraNFTBase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12740,
                              "src": "4085:11:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                                "typeString": "contract ERC721Drop"
                              }
                            },
                            "id": 13077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "saleDetails",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6875,
                            "src": "4085:23:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_SaleDetails_$8314_memory_ptr_$",
                              "typeString": "function () view external returns (struct IERC721Drop.SaleDetails memory)"
                            }
                          },
                          "id": 13078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4085:25:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SaleDetails_$8314_memory_ptr",
                            "typeString": "struct IERC721Drop.SaleDetails memory"
                          }
                        },
                        "id": 13079,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalMinted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8311,
                        "src": "4085:37:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 13080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4124:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 13075,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1684,
                        1709,
                        1739,
                        1764,
                        1823,
                        1848,
                        1878,
                        1903,
                        3003,
                        3038
                      ],
                      "referencedDeclaration": 1878,
                      "src": "4076:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4076:50:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13082,
                  "nodeType": "ExpressionStatement",
                  "src": "4076:50:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "hexValue": "32",
                              "id": 13086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4177:1:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 13084,
                              "name": "zoraNFTBase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12740,
                              "src": "4157:11:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                                "typeString": "contract ERC721Drop"
                              }
                            },
                            "id": 13085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 339,
                            "src": "4157:19:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 13087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4157:22:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 13090,
                                "name": "item",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12936,
                                "src": "4191:4:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                                  "typeString": "struct MerkleData.MerkleEntry memory"
                                }
                              },
                              "id": 13091,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "user",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12422,
                              "src": "4191:9:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 13089,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4183:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13088,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4183:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4183:18:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4157:44:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f776e65722069732077726f6e6720666f72206e6577206d696e74656420746f6b656e",
                        "id": 13094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4215:37:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbd120a333360b813e375a8cd2cce6b4aa19650379bb6bc5a1a3d1f7fc892c28",
                          "typeString": "literal_string \"owner is wrong for new minted token\""
                        },
                        "value": "owner is wrong for new minted token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbd120a333360b813e375a8cd2cce6b4aa19650379bb6bc5a1a3d1f7fc892c28",
                          "typeString": "literal_string \"owner is wrong for new minted token\""
                        }
                      ],
                      "id": 13083,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4136:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4136:126:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13096,
                  "nodeType": "ExpressionStatement",
                  "src": "4136:126:61"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 13097,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "4272:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3246,
                      "src": "4272:12:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 13100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4272:14:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13101,
                  "nodeType": "ExpressionStatement",
                  "src": "4272:14:61"
                }
              ]
            },
            "functionSelector": "568dcf5c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12899,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12898,
                  "name": "setupZoraNFTBase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12822,
                  "src": "2549:16:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "2549:16:61"
              }
            ],
            "name": "test_MerklePurchaseActiveSuccess",
            "nameLocation": "2507:32:61",
            "parameters": {
              "id": 12897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2539:2:61"
            },
            "returnParameters": {
              "id": 12900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2566:0:61"
            },
            "scope": 13558,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13330,
            "nodeType": "FunctionDefinition",
            "src": "4299:2102:61",
            "body": {
              "id": 13329,
              "nodeType": "Block",
              "src": "4401:2000:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13111,
                        "name": "DEFAULT_OWNER_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12765,
                        "src": "4425:21:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 13108,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "4411:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3229,
                      "src": "4411:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 13112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4411:36:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13113,
                  "nodeType": "ExpressionStatement",
                  "src": "4411:36:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 13117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4521:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 13120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4556:6:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": {
                                "id": 13119,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "4556:6:61",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              }
                            ],
                            "id": 13118,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4551:4:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 13121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4551:12:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint64",
                            "typeString": "type(uint64)"
                          }
                        },
                        "id": 13122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "4551:16:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 13123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4595:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 13126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4627:6:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": {
                                "id": 13125,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "4627:6:61",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              }
                            ],
                            "id": 13124,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4622:4:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 13127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4622:12:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint64",
                            "typeString": "type(uint64)"
                          }
                        },
                        "id": 13128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "4622:16:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "hexValue": "302e31",
                        "id": 13129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4669:9:61",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      },
                      {
                        "hexValue": "31",
                        "id": 13130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4719:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "746573742d322d707269636573",
                              "id": 13133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4781:15:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_87ac281fb924d614e22dde37b0c5f4cbbd684ccb6bedccd3958e556e737490a0",
                                "typeString": "literal_string \"test-2-prices\""
                              },
                              "value": "test-2-prices"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_87ac281fb924d614e22dde37b0c5f4cbbd684ccb6bedccd3958e556e737490a0",
                                "typeString": "literal_string \"test-2-prices\""
                              }
                            ],
                            "expression": {
                              "id": 13131,
                              "name": "merkleData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12759,
                              "src": "4753:10:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MerkleData_$12715",
                                "typeString": "contract MerkleData"
                              }
                            },
                            "id": 13132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getTestSetByName",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12455,
                            "src": "4753:27:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_struct$_TestData_$12437_memory_ptr_$",
                              "typeString": "function (string memory) view external returns (struct MerkleData.TestData memory)"
                            }
                          },
                          "id": 13134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4753:44:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestData_$12437_memory_ptr",
                            "typeString": "struct MerkleData.TestData memory"
                          }
                        },
                        "id": 13135,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "root",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12436,
                        "src": "4753:49:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 13114,
                        "name": "zoraNFTBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12740,
                        "src": "4457:11:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                          "typeString": "contract ERC721Drop"
                        }
                      },
                      "id": 13116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setSaleConfiguration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7338,
                      "src": "4457:32:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint104_$_t_uint32_$_t_uint64_$_t_uint64_$_t_uint64_$_t_uint64_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint104,uint32,uint64,uint64,uint64,uint64,bytes32) external"
                      }
                    },
                    "id": 13136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "publicSaleStart",
                      "publicSaleEnd",
                      "presaleStart",
                      "presaleEnd",
                      "publicSalePrice",
                      "maxSalePurchasePerAddress",
                      "presaleMerkleRoot"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4457:356:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13137,
                  "nodeType": "ExpressionStatement",
                  "src": "4457:356:61"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 13138,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "4823:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3246,
                      "src": "4823:12:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 13141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4823:14:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13142,
                  "nodeType": "ExpressionStatement",
                  "src": "4823:14:61"
                },
                {
                  "assignments": [
                    13147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13147,
                      "mutability": "mutable",
                      "name": "item",
                      "nameLocation": "4878:4:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 13329,
                      "src": "4848:34:61",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                        "typeString": "struct MerkleData.MerkleEntry"
                      },
                      "typeName": {
                        "id": 13146,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13145,
                          "name": "MerkleData.MerkleEntry",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12430,
                          "src": "4848:22:61"
                        },
                        "referencedDeclaration": 12430,
                        "src": "4848:22:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleEntry_$12430_storage_ptr",
                          "typeString": "struct MerkleData.MerkleEntry"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13148,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4848:34:61"
                },
                {
                  "expression": {
                    "id": 13157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13149,
                      "name": "item",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13147,
                      "src": "4893:4:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                        "typeString": "struct MerkleData.MerkleEntry memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "746573742d322d707269636573",
                              "id": 13152,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4928:15:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_87ac281fb924d614e22dde37b0c5f4cbbd684ccb6bedccd3958e556e737490a0",
                                "typeString": "literal_string \"test-2-prices\""
                              },
                              "value": "test-2-prices"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_87ac281fb924d614e22dde37b0c5f4cbbd684ccb6bedccd3958e556e737490a0",
                                "typeString": "literal_string \"test-2-prices\""
                              }
                            ],
                            "expression": {
                              "id": 13150,
                              "name": "merkleData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12759,
                              "src": "4900:10:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MerkleData_$12715",
                                "typeString": "contract MerkleData"
                              }
                            },
                            "id": 13151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getTestSetByName",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12455,
                            "src": "4900:27:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_struct$_TestData_$12437_memory_ptr_$",
                              "typeString": "function (string memory) view external returns (struct MerkleData.TestData memory)"
                            }
                          },
                          "id": 13153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4900:44:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestData_$12437_memory_ptr",
                            "typeString": "struct MerkleData.TestData memory"
                          }
                        },
                        "id": 13154,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "entries",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12434,
                        "src": "4900:52:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MerkleEntry_$12430_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct MerkleData.MerkleEntry memory[] memory"
                        }
                      },
                      "id": 13156,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 13155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4953:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4900:55:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                        "typeString": "struct MerkleData.MerkleEntry memory"
                      }
                    },
                    "src": "4893:62:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                      "typeString": "struct MerkleData.MerkleEntry memory"
                    }
                  },
                  "id": 13158,
                  "nodeType": "ExpressionStatement",
                  "src": "4893:62:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 13164,
                              "name": "item",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13147,
                              "src": "4981:4:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                                "typeString": "struct MerkleData.MerkleEntry memory"
                              }
                            },
                            "id": 13165,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "user",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12422,
                            "src": "4981:9:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4973:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13162,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4973:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4973:18:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 13167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4993:7:61",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13159,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "4965:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3253,
                      "src": "4965:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 13168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4965:36:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13169,
                  "nodeType": "ExpressionStatement",
                  "src": "4965:36:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 13175,
                              "name": "item",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13147,
                              "src": "5033:4:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                                "typeString": "struct MerkleData.MerkleEntry memory"
                              }
                            },
                            "id": 13176,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "user",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12422,
                            "src": "5033:9:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5025:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13173,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5025:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5025:18:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 13170,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "5011:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3229,
                      "src": "5011:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 13178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5011:33:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13179,
                  "nodeType": "ExpressionStatement",
                  "src": "5011:33:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 13183,
                            "name": "IERC721Drop",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8397,
                            "src": "5071:11:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC721Drop_$8397_$",
                              "typeString": "type(contract IERC721Drop)"
                            }
                          },
                          "id": 13184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "Presale_TooManyForAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8231,
                          "src": "5071:37:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 13185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "5071:46:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 13180,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "5055:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3270,
                      "src": "5055:15:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 13186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5055:63:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13187,
                  "nodeType": "ExpressionStatement",
                  "src": "5055:63:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 13196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5196:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      {
                        "expression": {
                          "id": 13197,
                          "name": "item",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13147,
                          "src": "5211:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                            "typeString": "struct MerkleData.MerkleEntry memory"
                          }
                        },
                        "id": 13198,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "maxMint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12424,
                        "src": "5211:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 13199,
                          "name": "item",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13147,
                          "src": "5237:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                            "typeString": "struct MerkleData.MerkleEntry memory"
                          }
                        },
                        "id": 13200,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mintPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12426,
                        "src": "5237:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 13201,
                          "name": "item",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13147,
                          "src": "5265:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                            "typeString": "struct MerkleData.MerkleEntry memory"
                          }
                        },
                        "id": 13202,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "proof",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12429,
                        "src": "5265:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        ],
                        "expression": {
                          "id": 13188,
                          "name": "zoraNFTBase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12740,
                          "src": "5128:11:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                            "typeString": "contract ERC721Drop"
                          }
                        },
                        "id": 13190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "purchasePresale",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7178,
                        "src": "5128:27:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,bytes32[] memory) payable external returns (uint256)"
                        }
                      },
                      "id": 13195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 13194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 13191,
                              "name": "item",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13147,
                              "src": "5163:4:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                                "typeString": "struct MerkleData.MerkleEntry memory"
                              }
                            },
                            "id": 13192,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mintPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12426,
                            "src": "5163:14:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 13193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5180:1:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "5163:18:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "5128:54:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,uint256,uint256,bytes32[] memory) payable external returns (uint256)"
                      }
                    },
                    "id": 13203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5128:157:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13204,
                  "nodeType": "ExpressionStatement",
                  "src": "5128:157:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 13213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5364:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "expression": {
                          "id": 13214,
                          "name": "item",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13147,
                          "src": "5379:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                            "typeString": "struct MerkleData.MerkleEntry memory"
                          }
                        },
                        "id": 13215,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "maxMint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12424,
                        "src": "5379:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 13216,
                          "name": "item",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13147,
                          "src": "5405:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                            "typeString": "struct MerkleData.MerkleEntry memory"
                          }
                        },
                        "id": 13217,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mintPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12426,
                        "src": "5405:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 13218,
                          "name": "item",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13147,
                          "src": "5433:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                            "typeString": "struct MerkleData.MerkleEntry memory"
                          }
                        },
                        "id": 13219,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "proof",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12429,
                        "src": "5433:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        ],
                        "expression": {
                          "id": 13205,
                          "name": "zoraNFTBase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12740,
                          "src": "5296:11:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                            "typeString": "contract ERC721Drop"
                          }
                        },
                        "id": 13207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "purchasePresale",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7178,
                        "src": "5296:27:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,bytes32[] memory) payable external returns (uint256)"
                        }
                      },
                      "id": 13212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 13211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 13208,
                              "name": "item",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13147,
                              "src": "5331:4:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                                "typeString": "struct MerkleData.MerkleEntry memory"
                              }
                            },
                            "id": 13209,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mintPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12426,
                            "src": "5331:14:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 13210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5348:1:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "5331:18:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "5296:54:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,uint256,uint256,bytes32[] memory) payable external returns (uint256)"
                      }
                    },
                    "id": 13220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5296:157:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13221,
                  "nodeType": "ExpressionStatement",
                  "src": "5296:157:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 13230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5531:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "expression": {
                          "id": 13231,
                          "name": "item",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13147,
                          "src": "5546:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                            "typeString": "struct MerkleData.MerkleEntry memory"
                          }
                        },
                        "id": 13232,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "maxMint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12424,
                        "src": "5546:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 13233,
                          "name": "item",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13147,
                          "src": "5572:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                            "typeString": "struct MerkleData.MerkleEntry memory"
                          }
                        },
                        "id": 13234,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mintPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12426,
                        "src": "5572:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 13235,
                          "name": "item",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13147,
                          "src": "5600:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                            "typeString": "struct MerkleData.MerkleEntry memory"
                          }
                        },
                        "id": 13236,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "proof",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12429,
                        "src": "5600:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        ],
                        "expression": {
                          "id": 13222,
                          "name": "zoraNFTBase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12740,
                          "src": "5463:11:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                            "typeString": "contract ERC721Drop"
                          }
                        },
                        "id": 13224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "purchasePresale",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7178,
                        "src": "5463:27:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,bytes32[] memory) payable external returns (uint256)"
                        }
                      },
                      "id": 13229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 13228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 13225,
                              "name": "item",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13147,
                              "src": "5498:4:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                                "typeString": "struct MerkleData.MerkleEntry memory"
                              }
                            },
                            "id": 13226,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mintPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12426,
                            "src": "5498:14:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 13227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5515:1:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "5498:18:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "5463:54:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,uint256,uint256,bytes32[] memory) payable external returns (uint256)"
                      }
                    },
                    "id": 13237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5463:157:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13238,
                  "nodeType": "ExpressionStatement",
                  "src": "5463:157:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 13240,
                              "name": "zoraNFTBase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12740,
                              "src": "5639:11:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                                "typeString": "contract ERC721Drop"
                              }
                            },
                            "id": 13241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "saleDetails",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6875,
                            "src": "5639:23:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_SaleDetails_$8314_memory_ptr_$",
                              "typeString": "function () view external returns (struct IERC721Drop.SaleDetails memory)"
                            }
                          },
                          "id": 13242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5639:25:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SaleDetails_$8314_memory_ptr",
                            "typeString": "struct IERC721Drop.SaleDetails memory"
                          }
                        },
                        "id": 13243,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalMinted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8311,
                        "src": "5639:37:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 13244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5678:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 13239,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1684,
                        1709,
                        1739,
                        1764,
                        1823,
                        1848,
                        1878,
                        1903,
                        3003,
                        3038
                      ],
                      "referencedDeclaration": 1878,
                      "src": "5630:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 13245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5630:50:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13246,
                  "nodeType": "ExpressionStatement",
                  "src": "5630:50:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 13250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5731:1:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 13248,
                              "name": "zoraNFTBase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12740,
                              "src": "5711:11:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                                "typeString": "contract ERC721Drop"
                              }
                            },
                            "id": 13249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 339,
                            "src": "5711:19:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 13251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5711:22:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 13254,
                                "name": "item",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13147,
                                "src": "5745:4:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                                  "typeString": "struct MerkleData.MerkleEntry memory"
                                }
                              },
                              "id": 13255,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "user",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12422,
                              "src": "5745:9:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 13253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5737:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13252,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5737:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5737:18:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5711:44:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f776e65722069732077726f6e6720666f72206e6577206d696e74656420746f6b656e",
                        "id": 13258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5769:37:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbd120a333360b813e375a8cd2cce6b4aa19650379bb6bc5a1a3d1f7fc892c28",
                          "typeString": "literal_string \"owner is wrong for new minted token\""
                        },
                        "value": "owner is wrong for new minted token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbd120a333360b813e375a8cd2cce6b4aa19650379bb6bc5a1a3d1f7fc892c28",
                          "typeString": "literal_string \"owner is wrong for new minted token\""
                        }
                      ],
                      "id": 13247,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5690:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5690:126:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13260,
                  "nodeType": "ExpressionStatement",
                  "src": "5690:126:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 13264,
                            "name": "IERC721Drop",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8397,
                            "src": "5843:11:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC721Drop_$8397_$",
                              "typeString": "type(contract IERC721Drop)"
                            }
                          },
                          "id": 13265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "Presale_TooManyForAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8231,
                          "src": "5843:37:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 13266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "5843:46:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 13261,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "5827:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3270,
                      "src": "5827:15:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 13267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5827:63:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13268,
                  "nodeType": "ExpressionStatement",
                  "src": "5827:63:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 13277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5968:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "expression": {
                          "id": 13278,
                          "name": "item",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13147,
                          "src": "5983:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                            "typeString": "struct MerkleData.MerkleEntry memory"
                          }
                        },
                        "id": 13279,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "maxMint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12424,
                        "src": "5983:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 13280,
                          "name": "item",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13147,
                          "src": "6009:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                            "typeString": "struct MerkleData.MerkleEntry memory"
                          }
                        },
                        "id": 13281,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mintPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12426,
                        "src": "6009:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 13282,
                          "name": "item",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13147,
                          "src": "6037:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                            "typeString": "struct MerkleData.MerkleEntry memory"
                          }
                        },
                        "id": 13283,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "proof",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12429,
                        "src": "6037:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        ],
                        "expression": {
                          "id": 13269,
                          "name": "zoraNFTBase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12740,
                          "src": "5900:11:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                            "typeString": "contract ERC721Drop"
                          }
                        },
                        "id": 13271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "purchasePresale",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7178,
                        "src": "5900:27:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,bytes32[] memory) payable external returns (uint256)"
                        }
                      },
                      "id": 13276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 13275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 13272,
                              "name": "item",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13147,
                              "src": "5935:4:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                                "typeString": "struct MerkleData.MerkleEntry memory"
                              }
                            },
                            "id": 13273,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mintPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12426,
                            "src": "5935:14:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 13274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5952:1:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "5935:18:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "5900:54:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,uint256,uint256,bytes32[] memory) payable external returns (uint256)"
                      }
                    },
                    "id": 13284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5900:157:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13285,
                  "nodeType": "ExpressionStatement",
                  "src": "5900:157:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 13291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6107:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 13286,
                          "name": "zoraNFTBase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12740,
                          "src": "6068:11:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                            "typeString": "contract ERC721Drop"
                          }
                        },
                        "id": 13288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "purchase",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7045,
                        "src": "6068:20:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 13290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 13289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6096:9:61",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "6068:38:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 13292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6068:41:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13293,
                  "nodeType": "ExpressionStatement",
                  "src": "6068:41:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "hexValue": "33",
                              "id": 13297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6160:1:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              }
                            ],
                            "expression": {
                              "id": 13295,
                              "name": "zoraNFTBase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12740,
                              "src": "6140:11:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                                "typeString": "contract ERC721Drop"
                              }
                            },
                            "id": 13296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 339,
                            "src": "6140:19:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 13298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6140:22:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 13301,
                                "name": "item",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13147,
                                "src": "6174:4:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                                  "typeString": "struct MerkleData.MerkleEntry memory"
                                }
                              },
                              "id": 13302,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "user",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12422,
                              "src": "6174:9:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 13300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6166:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13299,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6166:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6166:18:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6140:44:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f776e65722069732077726f6e6720666f72206e6577206d696e74656420746f6b656e",
                        "id": 13305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6198:37:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbd120a333360b813e375a8cd2cce6b4aa19650379bb6bc5a1a3d1f7fc892c28",
                          "typeString": "literal_string \"owner is wrong for new minted token\""
                        },
                        "value": "owner is wrong for new minted token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbd120a333360b813e375a8cd2cce6b4aa19650379bb6bc5a1a3d1f7fc892c28",
                          "typeString": "literal_string \"owner is wrong for new minted token\""
                        }
                      ],
                      "id": 13294,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6119:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6119:126:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13307,
                  "nodeType": "ExpressionStatement",
                  "src": "6119:126:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 13311,
                            "name": "IERC721Drop",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8397,
                            "src": "6271:11:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC721Drop_$8397_$",
                              "typeString": "type(contract IERC721Drop)"
                            }
                          },
                          "id": 13312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "Purchase_TooManyForAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8228,
                          "src": "6271:38:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 13313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "6271:47:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 13308,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "6255:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3270,
                      "src": "6255:15:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 13314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6255:64:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13315,
                  "nodeType": "ExpressionStatement",
                  "src": "6255:64:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 13321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6368:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 13316,
                          "name": "zoraNFTBase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12740,
                          "src": "6329:11:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                            "typeString": "contract ERC721Drop"
                          }
                        },
                        "id": 13318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "purchase",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7045,
                        "src": "6329:20:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 13320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 13319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6357:9:61",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "6329:38:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 13322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6329:41:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13323,
                  "nodeType": "ExpressionStatement",
                  "src": "6329:41:61"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 13324,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "6380:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3246,
                      "src": "6380:12:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 13327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6380:14:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13328,
                  "nodeType": "ExpressionStatement",
                  "src": "6380:14:61"
                }
              ]
            },
            "functionSelector": "428fe4ce",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13106,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13105,
                  "name": "setupZoraNFTBase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12822,
                  "src": "4380:16:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "4380:16:61"
              }
            ],
            "name": "test_MerklePurchaseAndPublicSalePurchaseLimits",
            "nameLocation": "4308:46:61",
            "parameters": {
              "id": 13104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4354:2:61"
            },
            "returnParameters": {
              "id": 13107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4401:0:61"
            },
            "scope": 13558,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13463,
            "nodeType": "FunctionDefinition",
            "src": "6407:1687:61",
            "body": {
              "id": 13462,
              "nodeType": "Block",
              "src": "6473:1621:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "54657374204e4654",
                        "id": 13336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6535:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_399b3b8e1a607e38a806dbdb386c84217e0a0255dd7cc2a55c6afb0aaffe0822",
                          "typeString": "literal_string \"Test NFT\""
                        },
                        "value": "Test NFT"
                      },
                      {
                        "hexValue": "544e4654",
                        "id": 13337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6576:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4bf4639f4809295b3818b7ece4077b3fa27a3ec42260477c85e0da55c64ce4f5",
                          "typeString": "literal_string \"TNFT\""
                        },
                        "value": "TNFT"
                      },
                      {
                        "id": 13338,
                        "name": "DEFAULT_OWNER_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12765,
                        "src": "6611:21:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 13341,
                            "name": "DEFAULT_FUNDS_RECIPIENT_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12774,
                            "src": "6671:31:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 13340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6663:8:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 13339,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6663:8:61",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6663:40:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 13343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6731:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "383030",
                        "id": 13344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6759:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_800_by_1",
                          "typeString": "int_const 800"
                        },
                        "value": "800"
                      },
                      {
                        "id": 13345,
                        "name": "dummyRenderer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12753,
                        "src": "6795:13:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DummyMetadataRenderer_$14610",
                          "typeString": "contract DummyMetadataRenderer"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 13346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6845:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 13349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6941:1:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 13350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6975:1:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 13351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7008:1:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 13352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7039:1:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 13353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7075:1:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 13354,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7121:1:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 13357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7167:1:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 13356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7159:7:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 13355,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "7159:7:61",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 13358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7159:10:61",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 13347,
                            "name": "IERC721Drop",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8397,
                            "src": "6875:11:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC721Drop_$8397_$",
                              "typeString": "type(contract IERC721Drop)"
                            }
                          },
                          "id": 13348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "SalesConfiguration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8291,
                          "src": "6875:30:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SalesConfiguration_$8291_storage_ptr_$",
                            "typeString": "type(struct IERC721Drop.SalesConfiguration storage pointer)"
                          }
                        },
                        "id": 13359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "publicSaleStart",
                          "publicSaleEnd",
                          "presaleStart",
                          "presaleEnd",
                          "publicSalePrice",
                          "maxSalePurchasePerAddress",
                          "presaleMerkleRoot"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "6875:309:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SalesConfiguration_$8291_memory_ptr",
                          "typeString": "struct IERC721Drop.SalesConfiguration memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_399b3b8e1a607e38a806dbdb386c84217e0a0255dd7cc2a55c6afb0aaffe0822",
                          "typeString": "literal_string \"Test NFT\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4bf4639f4809295b3818b7ece4077b3fa27a3ec42260477c85e0da55c64ce4f5",
                          "typeString": "literal_string \"TNFT\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_800_by_1",
                          "typeString": "int_const 800"
                        },
                        {
                          "typeIdentifier": "t_contract$_DummyMetadataRenderer_$14610",
                          "typeString": "contract DummyMetadataRenderer"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_struct$_SalesConfiguration_$8291_memory_ptr",
                          "typeString": "struct IERC721Drop.SalesConfiguration memory"
                        }
                      ],
                      "expression": {
                        "id": 13333,
                        "name": "zoraNFTBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12740,
                        "src": "6483:11:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                          "typeString": "contract ERC721Drop"
                        }
                      },
                      "id": 13335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6753,
                      "src": "6483:22:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_address_payable_$_t_uint64_$_t_uint16_$_t_struct$_SalesConfiguration_$8291_memory_ptr_$_t_contract$_IMetadataRenderer_$8444_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,address,address payable,uint64,uint16,struct IERC721Drop.SalesConfiguration memory,contract IMetadataRenderer,bytes memory) external"
                      }
                    },
                    "id": 13360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "_contractName",
                      "_contractSymbol",
                      "_initialOwner",
                      "_fundsRecipient",
                      "_editionSize",
                      "_royaltyBPS",
                      "_metadataRenderer",
                      "_metadataRendererInit",
                      "_salesConfig"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "6483:712:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13361,
                  "nodeType": "ExpressionStatement",
                  "src": "6483:712:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13365,
                        "name": "DEFAULT_OWNER_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12765,
                        "src": "7220:21:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 13362,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "7206:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3229,
                      "src": "7206:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 13366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7206:36:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13367,
                  "nodeType": "ExpressionStatement",
                  "src": "7206:36:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 13371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7316:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 13374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7351:6:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": {
                                "id": 13373,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "7351:6:61",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              }
                            ],
                            "id": 13372,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "7346:4:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 13375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7346:12:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint64",
                            "typeString": "type(uint64)"
                          }
                        },
                        "id": 13376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "7346:16:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 13377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7390:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 13380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7422:6:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": {
                                "id": 13379,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "7422:6:61",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              }
                            ],
                            "id": 13378,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "7417:4:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 13381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7417:12:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint64",
                            "typeString": "type(uint64)"
                          }
                        },
                        "id": 13382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "7417:16:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "hexValue": "302e31",
                        "id": 13383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7464:9:61",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      },
                      {
                        "hexValue": "31",
                        "id": 13384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7514:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "746573742d322d707269636573",
                              "id": 13387,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7576:15:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_87ac281fb924d614e22dde37b0c5f4cbbd684ccb6bedccd3958e556e737490a0",
                                "typeString": "literal_string \"test-2-prices\""
                              },
                              "value": "test-2-prices"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_87ac281fb924d614e22dde37b0c5f4cbbd684ccb6bedccd3958e556e737490a0",
                                "typeString": "literal_string \"test-2-prices\""
                              }
                            ],
                            "expression": {
                              "id": 13385,
                              "name": "merkleData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12759,
                              "src": "7548:10:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MerkleData_$12715",
                                "typeString": "contract MerkleData"
                              }
                            },
                            "id": 13386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getTestSetByName",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12455,
                            "src": "7548:27:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_struct$_TestData_$12437_memory_ptr_$",
                              "typeString": "function (string memory) view external returns (struct MerkleData.TestData memory)"
                            }
                          },
                          "id": 13388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7548:44:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestData_$12437_memory_ptr",
                            "typeString": "struct MerkleData.TestData memory"
                          }
                        },
                        "id": 13389,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "root",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12436,
                        "src": "7548:49:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 13368,
                        "name": "zoraNFTBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12740,
                        "src": "7252:11:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                          "typeString": "contract ERC721Drop"
                        }
                      },
                      "id": 13370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setSaleConfiguration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7338,
                      "src": "7252:32:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint104_$_t_uint32_$_t_uint64_$_t_uint64_$_t_uint64_$_t_uint64_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint104,uint32,uint64,uint64,uint64,uint64,bytes32) external"
                      }
                    },
                    "id": 13390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "publicSaleStart",
                      "publicSaleEnd",
                      "presaleStart",
                      "presaleEnd",
                      "publicSalePrice",
                      "maxSalePurchasePerAddress",
                      "presaleMerkleRoot"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "7252:356:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13391,
                  "nodeType": "ExpressionStatement",
                  "src": "7252:356:61"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 13392,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "7618:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3246,
                      "src": "7618:12:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 13395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7618:14:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13396,
                  "nodeType": "ExpressionStatement",
                  "src": "7618:14:61"
                },
                {
                  "assignments": [
                    13401
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13401,
                      "mutability": "mutable",
                      "name": "item",
                      "nameLocation": "7673:4:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 13462,
                      "src": "7643:34:61",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                        "typeString": "struct MerkleData.MerkleEntry"
                      },
                      "typeName": {
                        "id": 13400,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13399,
                          "name": "MerkleData.MerkleEntry",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12430,
                          "src": "7643:22:61"
                        },
                        "referencedDeclaration": 12430,
                        "src": "7643:22:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleEntry_$12430_storage_ptr",
                          "typeString": "struct MerkleData.MerkleEntry"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13402,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7643:34:61"
                },
                {
                  "expression": {
                    "id": 13411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13403,
                      "name": "item",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13401,
                      "src": "7688:4:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                        "typeString": "struct MerkleData.MerkleEntry memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "746573742d322d707269636573",
                              "id": 13406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7723:15:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_87ac281fb924d614e22dde37b0c5f4cbbd684ccb6bedccd3958e556e737490a0",
                                "typeString": "literal_string \"test-2-prices\""
                              },
                              "value": "test-2-prices"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_87ac281fb924d614e22dde37b0c5f4cbbd684ccb6bedccd3958e556e737490a0",
                                "typeString": "literal_string \"test-2-prices\""
                              }
                            ],
                            "expression": {
                              "id": 13404,
                              "name": "merkleData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12759,
                              "src": "7695:10:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MerkleData_$12715",
                                "typeString": "contract MerkleData"
                              }
                            },
                            "id": 13405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getTestSetByName",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12455,
                            "src": "7695:27:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_struct$_TestData_$12437_memory_ptr_$",
                              "typeString": "function (string memory) view external returns (struct MerkleData.TestData memory)"
                            }
                          },
                          "id": 13407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7695:44:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestData_$12437_memory_ptr",
                            "typeString": "struct MerkleData.TestData memory"
                          }
                        },
                        "id": 13408,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "entries",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12434,
                        "src": "7695:52:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MerkleEntry_$12430_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct MerkleData.MerkleEntry memory[] memory"
                        }
                      },
                      "id": 13410,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 13409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7748:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7695:55:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                        "typeString": "struct MerkleData.MerkleEntry memory"
                      }
                    },
                    "src": "7688:62:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                      "typeString": "struct MerkleData.MerkleEntry memory"
                    }
                  },
                  "id": 13412,
                  "nodeType": "ExpressionStatement",
                  "src": "7688:62:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 13418,
                              "name": "item",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13401,
                              "src": "7776:4:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                                "typeString": "struct MerkleData.MerkleEntry memory"
                              }
                            },
                            "id": 13419,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "user",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12422,
                            "src": "7776:9:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7768:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13416,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7768:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7768:18:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 13421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7788:7:61",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13413,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "7760:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3253,
                      "src": "7760:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 13422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7760:36:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13423,
                  "nodeType": "ExpressionStatement",
                  "src": "7760:36:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 13429,
                              "name": "item",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13401,
                              "src": "7828:4:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                                "typeString": "struct MerkleData.MerkleEntry memory"
                              }
                            },
                            "id": 13430,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "user",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12422,
                            "src": "7828:9:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7820:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13427,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7820:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7820:18:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 13424,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "7806:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3229,
                      "src": "7806:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 13432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7806:33:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13433,
                  "nodeType": "ExpressionStatement",
                  "src": "7806:33:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 13437,
                            "name": "IERC721Drop",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8397,
                            "src": "7866:11:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC721Drop_$8397_$",
                              "typeString": "type(contract IERC721Drop)"
                            }
                          },
                          "id": 13438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "Mint_SoldOut",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8225,
                          "src": "7866:24:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 13439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "7866:33:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 13434,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "7850:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3270,
                      "src": "7850:15:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 13440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7850:50:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13441,
                  "nodeType": "ExpressionStatement",
                  "src": "7850:50:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 13448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7974:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "expression": {
                          "id": 13449,
                          "name": "item",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13401,
                          "src": "7989:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                            "typeString": "struct MerkleData.MerkleEntry memory"
                          }
                        },
                        "id": 13450,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "maxMint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12424,
                        "src": "7989:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 13451,
                          "name": "item",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13401,
                          "src": "8015:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                            "typeString": "struct MerkleData.MerkleEntry memory"
                          }
                        },
                        "id": 13452,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mintPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12426,
                        "src": "8015:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 13453,
                          "name": "item",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13401,
                          "src": "8043:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                            "typeString": "struct MerkleData.MerkleEntry memory"
                          }
                        },
                        "id": 13454,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "proof",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12429,
                        "src": "8043:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        ],
                        "expression": {
                          "id": 13442,
                          "name": "zoraNFTBase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12740,
                          "src": "7910:11:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                            "typeString": "contract ERC721Drop"
                          }
                        },
                        "id": 13444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "purchasePresale",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7178,
                        "src": "7910:27:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,bytes32[] memory) payable external returns (uint256)"
                        }
                      },
                      "id": 13447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 13445,
                            "name": "item",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13401,
                            "src": "7945:4:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                              "typeString": "struct MerkleData.MerkleEntry memory"
                            }
                          },
                          "id": 13446,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mintPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12426,
                          "src": "7945:14:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "7910:50:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,uint256,uint256,bytes32[] memory) payable external returns (uint256)"
                      }
                    },
                    "id": 13455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7910:153:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13456,
                  "nodeType": "ExpressionStatement",
                  "src": "7910:153:61"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 13457,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "8073:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3246,
                      "src": "8073:12:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 13460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8073:14:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13461,
                  "nodeType": "ExpressionStatement",
                  "src": "8073:14:61"
                }
              ]
            },
            "functionSelector": "9e66713a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_MerklePurchaseAndPublicSaleEditionSizeZero",
            "nameLocation": "6416:47:61",
            "parameters": {
              "id": 13331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6463:2:61"
            },
            "returnParameters": {
              "id": 13332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6473:0:61"
            },
            "scope": 13558,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13557,
            "nodeType": "FunctionDefinition",
            "src": "8100:1046:61",
            "body": {
              "id": 13556,
              "nodeType": "Block",
              "src": "8168:978:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13471,
                        "name": "DEFAULT_OWNER_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12765,
                        "src": "8192:21:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 13468,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "8178:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3229,
                      "src": "8178:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 13472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8178:36:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13473,
                  "nodeType": "ExpressionStatement",
                  "src": "8178:36:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313030",
                        "id": 13477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8302:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 13474,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "8294:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3158,
                      "src": "8294:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 13478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8294:12:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13479,
                  "nodeType": "ExpressionStatement",
                  "src": "8294:12:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 13483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8380:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 13484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8410:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 13485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8439:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 13486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8466:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 13487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8498:7:61",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 13488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8546:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "746573742d332d616464726573736573",
                              "id": 13491,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8625:18:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_77694de0fe7c7e819b10ee34112a73358be466096b29e5a9a2eddfa55b948ef5",
                                "typeString": "literal_string \"test-3-addresses\""
                              },
                              "value": "test-3-addresses"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_77694de0fe7c7e819b10ee34112a73358be466096b29e5a9a2eddfa55b948ef5",
                                "typeString": "literal_string \"test-3-addresses\""
                              }
                            ],
                            "expression": {
                              "id": 13489,
                              "name": "merkleData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12759,
                              "src": "8580:10:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MerkleData_$12715",
                                "typeString": "contract MerkleData"
                              }
                            },
                            "id": 13490,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getTestSetByName",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12455,
                            "src": "8580:44:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_struct$_TestData_$12437_memory_ptr_$",
                              "typeString": "function (string memory) view external returns (struct MerkleData.TestData memory)"
                            }
                          },
                          "id": 13492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8580:64:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestData_$12437_memory_ptr",
                            "typeString": "struct MerkleData.TestData memory"
                          }
                        },
                        "id": 13493,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "root",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12436,
                        "src": "8580:86:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 13480,
                        "name": "zoraNFTBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12740,
                        "src": "8316:11:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                          "typeString": "contract ERC721Drop"
                        }
                      },
                      "id": 13482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setSaleConfiguration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7338,
                      "src": "8316:32:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint104_$_t_uint32_$_t_uint64_$_t_uint64_$_t_uint64_$_t_uint64_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint104,uint32,uint64,uint64,uint64,uint64,bytes32) external"
                      }
                    },
                    "id": 13494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "publicSaleStart",
                      "publicSaleEnd",
                      "presaleStart",
                      "presaleEnd",
                      "publicSalePrice",
                      "maxSalePurchasePerAddress",
                      "presaleMerkleRoot"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "8316:361:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13495,
                  "nodeType": "ExpressionStatement",
                  "src": "8316:361:61"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 13496,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "8687:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3246,
                      "src": "8687:12:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 13499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8687:14:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13500,
                  "nodeType": "ExpressionStatement",
                  "src": "8687:14:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30783130",
                            "id": 13506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8727:4:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_16_by_1",
                              "typeString": "int_const 16"
                            },
                            "value": "0x10"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_16_by_1",
                              "typeString": "int_const 16"
                            }
                          ],
                          "id": 13505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8719:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13504,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8719:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8719:13:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 13508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8734:7:61",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 13501,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "8711:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3253,
                      "src": "8711:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 13509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8711:31:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13510,
                  "nodeType": "ExpressionStatement",
                  "src": "8711:31:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30783130",
                            "id": 13516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8775:4:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_16_by_1",
                              "typeString": "int_const 16"
                            },
                            "value": "0x10"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_16_by_1",
                              "typeString": "int_const 16"
                            }
                          ],
                          "id": 13515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8767:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13514,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8767:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8767:13:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 13511,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "8753:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3229,
                      "src": "8753:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 13518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8753:28:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13519,
                  "nodeType": "ExpressionStatement",
                  "src": "8753:28:61"
                },
                {
                  "assignments": [
                    13524
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13524,
                      "mutability": "mutable",
                      "name": "item",
                      "nameLocation": "8821:4:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 13556,
                      "src": "8791:34:61",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                        "typeString": "struct MerkleData.MerkleEntry"
                      },
                      "typeName": {
                        "id": 13523,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13522,
                          "name": "MerkleData.MerkleEntry",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12430,
                          "src": "8791:22:61"
                        },
                        "referencedDeclaration": 12430,
                        "src": "8791:22:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleEntry_$12430_storage_ptr",
                          "typeString": "struct MerkleData.MerkleEntry"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13532,
                  "initialValue": {
                    "baseExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "746573742d332d616464726573736573",
                            "id": 13527,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8869:18:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_77694de0fe7c7e819b10ee34112a73358be466096b29e5a9a2eddfa55b948ef5",
                              "typeString": "literal_string \"test-3-addresses\""
                            },
                            "value": "test-3-addresses"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_77694de0fe7c7e819b10ee34112a73358be466096b29e5a9a2eddfa55b948ef5",
                              "typeString": "literal_string \"test-3-addresses\""
                            }
                          ],
                          "expression": {
                            "id": 13525,
                            "name": "merkleData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12759,
                            "src": "8828:10:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MerkleData_$12715",
                              "typeString": "contract MerkleData"
                            }
                          },
                          "id": 13526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTestSetByName",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12455,
                          "src": "8828:40:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_struct$_TestData_$12437_memory_ptr_$",
                            "typeString": "function (string memory) view external returns (struct MerkleData.TestData memory)"
                          }
                        },
                        "id": 13528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8828:60:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestData_$12437_memory_ptr",
                          "typeString": "struct MerkleData.TestData memory"
                        }
                      },
                      "id": 13529,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "entries",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12434,
                      "src": "8828:81:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_MerkleEntry_$12430_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct MerkleData.MerkleEntry memory[] memory"
                      }
                    },
                    "id": 13531,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 13530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8910:1:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8828:84:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                      "typeString": "struct MerkleData.MerkleEntry memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8791:121:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 13536,
                            "name": "IERC721Drop",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8397,
                            "src": "8938:11:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC721Drop_$8397_$",
                              "typeString": "type(contract IERC721Drop)"
                            }
                          },
                          "id": 13537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "Presale_Inactive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8214,
                          "src": "8938:28:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 13538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "8938:37:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 13533,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12746,
                        "src": "8922:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3337",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 13535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3270,
                      "src": "8922:15:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 13539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8922:54:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13540,
                  "nodeType": "ExpressionStatement",
                  "src": "8922:54:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 13547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9050:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "expression": {
                          "id": 13548,
                          "name": "item",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13524,
                          "src": "9065:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                            "typeString": "struct MerkleData.MerkleEntry memory"
                          }
                        },
                        "id": 13549,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "maxMint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12424,
                        "src": "9065:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 13550,
                          "name": "item",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13524,
                          "src": "9091:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                            "typeString": "struct MerkleData.MerkleEntry memory"
                          }
                        },
                        "id": 13551,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mintPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12426,
                        "src": "9091:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 13552,
                          "name": "item",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13524,
                          "src": "9119:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                            "typeString": "struct MerkleData.MerkleEntry memory"
                          }
                        },
                        "id": 13553,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "proof",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12429,
                        "src": "9119:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        ],
                        "expression": {
                          "id": 13541,
                          "name": "zoraNFTBase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12740,
                          "src": "8986:11:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                            "typeString": "contract ERC721Drop"
                          }
                        },
                        "id": 13543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "purchasePresale",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7178,
                        "src": "8986:27:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,bytes32[] memory) payable external returns (uint256)"
                        }
                      },
                      "id": 13546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 13544,
                            "name": "item",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13524,
                            "src": "9021:4:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MerkleEntry_$12430_memory_ptr",
                              "typeString": "struct MerkleData.MerkleEntry memory"
                            }
                          },
                          "id": 13545,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mintPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12426,
                          "src": "9021:14:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "8986:50:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,uint256,uint256,bytes32[] memory) payable external returns (uint256)"
                      }
                    },
                    "id": 13554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8986:153:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13555,
                  "nodeType": "ExpressionStatement",
                  "src": "8986:153:61"
                }
              ]
            },
            "functionSelector": "11709b36",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13466,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13465,
                  "name": "setupZoraNFTBase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12822,
                  "src": "8151:16:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "8151:16:61"
              }
            ],
            "name": "test_MerklePurchaseInactiveFails",
            "nameLocation": "8109:32:61",
            "parameters": {
              "id": 13464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8141:2:61"
            },
            "returnParameters": {
              "id": 13467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8168:0:61"
            },
            "scope": 13558,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12736,
              "name": "DSTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3150,
              "src": "596:6:61"
            },
            "id": 12737,
            "nodeType": "InheritanceSpecifier",
            "src": "596:6:61"
          }
        ],
        "canonicalName": "ZoraNFTBaseTest",
        "contractDependencies": [
          7601,
          7621,
          7867,
          12715,
          14610
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          13558,
          3150
        ],
        "name": "ZoraNFTBaseTest",
        "nameLocation": "577:15:61",
        "scope": 13559,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 61
}