{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_FUNDS_RECIPIENT_ADDRESS",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_OWNER_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ZORA_DAO_ADDRESS",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dummyRenderer",
      "outputs": [
        {
          "internalType": "contract DummyMetadataRenderer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeManager",
      "outputs": [
        {
          "internalType": "contract ZoraFeeManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mediaContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060408190526000805460ff1916600117905561001c9061006b565b604051809103906000f080158015610038573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b039290921691909117905534801561006557600080fd5b50610078565b6102ce8061025d83390190565b6101d6806100876000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80637168d23111610076578063d0fb02031161005b578063d0fb02031461016a578063dcf0738a1461018a578063fa7626d41461019357600080fd5b80637168d2311461013e578063ba414fa61461014857600080fd5b80633a768463116100a75780633a768463146100f95780634e21f9c01461011457806363e48e211461011e57600080fd5b80630a9254e4146100c357806311568985146100c5575b600080fd5b005b6100cf6202130381565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100cf737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6100cf6212345681565b6002546100cf9073ffffffffffffffffffffffffffffffffffffffff1681565b6100cf6202349981565b60005461015a90610100900460ff1681565b60405190151581526020016100f0565b6003546100cf9073ffffffffffffffffffffffffffffffffffffffff1681565b6100cf61099981565b60005461015a9060ff168156fea2646970667358221220d14c8c7646792fd1b22b3814f9a0805a74d885d13e10b9aa5c746a584773decd64736f6c634300080a0033608060405234801561001057600080fd5b506102ae806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063856a7ffa14610046578063c87b56dd14610059578063e8a3d485146100b5575b600080fd5b61005761005436600461011d565b50565b005b61009f6100673660046101ec565b5060408051808201909152600581527f44554d4d59000000000000000000000000000000000000000000000000000000602082015290565b6040516100ac9190610205565b60405180910390f35b60408051808201909152600581527f44554d4d59000000000000000000000000000000000000000000000000000000602082015261009f565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561012f57600080fd5b813567ffffffffffffffff8082111561014757600080fd5b818401915084601f83011261015b57600080fd5b81358181111561016d5761016d6100ee565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156101b3576101b36100ee565b816040528281528760208487010111156101cc57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156101fe57600080fd5b5035919050565b600060208083528351808285015260005b8181101561023257858101830151858201604001528201610216565b81811115610244576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01692909201604001939250505056fea2646970667358221220047d8ea7e6cfa72644c98c2ee359b7656b0bb1e51e107f27bcb9065d97356e3264736f6c634300080a0033",
    "sourceMap": "711:622:56:-:0;;;;;1569:26:2;;;-1:-1:-1;;1569:26:2;1591:4;1569:26;;;893:27:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;848:72:56;;;-1:-1:-1;;;;;;848:72:56;-1:-1:-1;;;;;848:72:56;;;;;;;;;;711:622;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100be5760003560e01c80637168d23111610076578063d0fb02031161005b578063d0fb02031461016a578063dcf0738a1461018a578063fa7626d41461019357600080fd5b80637168d2311461013e578063ba414fa61461014857600080fd5b80633a768463116100a75780633a768463146100f95780634e21f9c01461011457806363e48e211461011e57600080fd5b80630a9254e4146100c357806311568985146100c5575b600080fd5b005b6100cf6202130381565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100cf737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6100cf6212345681565b6002546100cf9073ffffffffffffffffffffffffffffffffffffffff1681565b6100cf6202349981565b60005461015a90610100900460ff1681565b60405190151581526020016100f0565b6003546100cf9073ffffffffffffffffffffffffffffffffffffffff1681565b6100cf61099981565b60005461015a9060ff168156fea2646970667358221220d14c8c7646792fd1b22b3814f9a0805a74d885d13e10b9aa5c746a584773decd64736f6c634300080a0033",
    "sourceMap": "711:622:56:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1299:32;;1034:99;;1124:7;1034:99;;;;;206:42:68;194:55;;;176:74;;164:2;149:18;1034:99:56;;;;;;;;802:40;;1666:64:2;802:40:56;;1235:57;;1283:8;1235:57;;848:72;;;;;;;;;964:64;;1020:7;964:64;;1601:18:2;;;;;;;;;;;;;;;1161:14:68;;1154:22;1136:41;;1124:2;1109:18;1601::2;996:187:68;926:32:56;;;;;;;;;1139:90;;1222:5;1139:90;;1569:26:2;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_FUNDS_RECIPIENT_ADDRESS()": "11568985",
    "DEFAULT_OWNER_ADDRESS()": "7168d231",
    "DEFAULT_ZORA_DAO_ADDRESS()": "dcf0738a",
    "IS_TEST()": "fa7626d4",
    "dummyRenderer()": "63e48e21",
    "failed()": "ba414fa6",
    "feeManager()": "d0fb0203",
    "mediaContract()": "4e21f9c0",
    "setUp()": "0a9254e4",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "/Users/iain/zora/zora-nft-contracts/test/ERC721DropUpgrades.t.sol",
    "id": 11653,
    "exportedSymbols": {
      "DSTest": [
        3150
      ],
      "DummyMetadataRenderer": [
        14610
      ],
      "ERC721Drop": [
        7601
      ],
      "ERC721DropProxy": [
        7621
      ],
      "ERC721DropTest": [
        11652
      ],
      "FactoryUpgradeGate": [
        7765
      ],
      "IERC721AUpgradeable": [
        1469
      ],
      "IERC721Drop": [
        8397
      ],
      "IMetadataRenderer": [
        8444
      ],
      "MockUser": [
        14613
      ],
      "Vm": [
        3337
      ],
      "ZoraFeeManager": [
        7867
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1301:56",
    "nodes": [
      {
        "id": 11571,
        "nodeType": "PragmaDirective",
        "src": "32:23:56",
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 11573,
        "nodeType": "ImportDirective",
        "src": "57:36:56",
        "absolutePath": "/Users/iain/zora/zora-nft-contracts/lib/forge-std/src/Vm.sol",
        "file": "forge-std/Vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11653,
        "sourceUnit": 3338,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11572,
              "name": "Vm",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "65:2:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11575,
        "nodeType": "ImportDirective",
        "src": "94:40:56",
        "absolutePath": "/Users/iain/zora/zora-nft-contracts/lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11653,
        "sourceUnit": 3151,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11574,
              "name": "DSTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "102:6:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11577,
        "nodeType": "ImportDirective",
        "src": "135:80:56",
        "absolutePath": "/Users/iain/zora/zora-nft-contracts/lib/ERC721A-Upgradeable/contracts/IERC721AUpgradeable.sol",
        "file": "erc721a-upgradeable/IERC721AUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11653,
        "sourceUnit": 1470,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11576,
              "name": "IERC721AUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "143:19:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11579,
        "nodeType": "ImportDirective",
        "src": "217:62:56",
        "absolutePath": "/Users/iain/zora/zora-nft-contracts/src/interfaces/IERC721Drop.sol",
        "file": "../src/interfaces/IERC721Drop.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11653,
        "sourceUnit": 8398,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11578,
              "name": "IERC721Drop",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "225:11:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11581,
        "nodeType": "ImportDirective",
        "src": "280:49:56",
        "absolutePath": "/Users/iain/zora/zora-nft-contracts/src/ERC721Drop.sol",
        "file": "../src/ERC721Drop.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11653,
        "sourceUnit": 7602,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11580,
              "name": "ERC721Drop",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "288:10:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11583,
        "nodeType": "ImportDirective",
        "src": "330:57:56",
        "absolutePath": "/Users/iain/zora/zora-nft-contracts/src/ZoraFeeManager.sol",
        "file": "../src/ZoraFeeManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11653,
        "sourceUnit": 7868,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11582,
              "name": "ZoraFeeManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "338:14:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11585,
        "nodeType": "ImportDirective",
        "src": "388:72:56",
        "absolutePath": "/Users/iain/zora/zora-nft-contracts/test/utils/DummyMetadataRenderer.sol",
        "file": "./utils/DummyMetadataRenderer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11653,
        "sourceUnit": 14611,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11584,
              "name": "DummyMetadataRenderer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "396:21:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11587,
        "nodeType": "ImportDirective",
        "src": "461:46:56",
        "absolutePath": "/Users/iain/zora/zora-nft-contracts/test/utils/MockUser.sol",
        "file": "./utils/MockUser.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11653,
        "sourceUnit": 14614,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11586,
              "name": "MockUser",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "469:8:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11589,
        "nodeType": "ImportDirective",
        "src": "508:74:56",
        "absolutePath": "/Users/iain/zora/zora-nft-contracts/src/interfaces/IMetadataRenderer.sol",
        "file": "../src/interfaces/IMetadataRenderer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11653,
        "sourceUnit": 8445,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11588,
              "name": "IMetadataRenderer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "516:17:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11591,
        "nodeType": "ImportDirective",
        "src": "583:65:56",
        "absolutePath": "/Users/iain/zora/zora-nft-contracts/src/FactoryUpgradeGate.sol",
        "file": "../src/FactoryUpgradeGate.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11653,
        "sourceUnit": 7766,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11590,
              "name": "FactoryUpgradeGate",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "591:18:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11593,
        "nodeType": "ImportDirective",
        "src": "649:59:56",
        "absolutePath": "/Users/iain/zora/zora-nft-contracts/src/ERC721DropProxy.sol",
        "file": "../src/ERC721DropProxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11653,
        "sourceUnit": 7622,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11592,
              "name": "ERC721DropProxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "657:15:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11652,
        "nodeType": "ContractDefinition",
        "src": "711:622:56",
        "nodes": [
          {
            "id": 11598,
            "nodeType": "VariableDeclaration",
            "src": "751:22:56",
            "constant": false,
            "mutability": "mutable",
            "name": "zoraNFTBase",
            "nameLocation": "762:11:56",
            "scope": 11652,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC721Drop_$7601",
              "typeString": "contract ERC721Drop"
            },
            "typeName": {
              "id": 11597,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11596,
                "name": "ERC721Drop",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 7601,
                "src": "751:10:56"
              },
              "referencedDeclaration": 7601,
              "src": "751:10:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Drop_$7601",
                "typeString": "contract ERC721Drop"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 11601,
            "nodeType": "VariableDeclaration",
            "src": "779:17:56",
            "constant": false,
            "mutability": "mutable",
            "name": "mockUser",
            "nameLocation": "788:8:56",
            "scope": 11652,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockUser_$14613",
              "typeString": "contract MockUser"
            },
            "typeName": {
              "id": 11600,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11599,
                "name": "MockUser",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 14613,
                "src": "779:8:56"
              },
              "referencedDeclaration": 14613,
              "src": "779:8:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockUser_$14613",
                "typeString": "contract MockUser"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 11607,
            "nodeType": "VariableDeclaration",
            "src": "802:40:56",
            "constant": true,
            "functionSelector": "3a768463",
            "mutability": "constant",
            "name": "vm",
            "nameLocation": "821:2:56",
            "scope": 11652,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Vm_$3337",
              "typeString": "contract Vm"
            },
            "typeName": {
              "id": 11603,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11602,
                "name": "Vm",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3337,
                "src": "802:2:56"
              },
              "referencedDeclaration": 3337,
              "src": "802:2:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$3337",
                "typeString": "contract Vm"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 11605,
                  "name": "HEVM_ADDRESS",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1577,
                  "src": "829:12:56",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 11604,
                "name": "Vm",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 3337,
                "src": "826:2:56",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Vm_$3337_$",
                  "typeString": "type(contract Vm)"
                }
              },
              "id": 11606,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "826:16:56",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$3337",
                "typeString": "contract Vm"
              }
            },
            "visibility": "public"
          },
          {
            "id": 11614,
            "nodeType": "VariableDeclaration",
            "src": "848:72:56",
            "constant": false,
            "functionSelector": "63e48e21",
            "mutability": "mutable",
            "name": "dummyRenderer",
            "nameLocation": "877:13:56",
            "scope": 11652,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DummyMetadataRenderer_$14610",
              "typeString": "contract DummyMetadataRenderer"
            },
            "typeName": {
              "id": 11609,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11608,
                "name": "DummyMetadataRenderer",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 14610,
                "src": "848:21:56"
              },
              "referencedDeclaration": 14610,
              "src": "848:21:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DummyMetadataRenderer_$14610",
                "typeString": "contract DummyMetadataRenderer"
              }
            },
            "value": {
              "arguments": [],
              "expression": {
                "argumentTypes": [],
                "id": 11612,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "893:25:56",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_DummyMetadataRenderer_$14610_$",
                  "typeString": "function () returns (contract DummyMetadataRenderer)"
                },
                "typeName": {
                  "id": 11611,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 11610,
                    "name": "DummyMetadataRenderer",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 14610,
                    "src": "897:21:56"
                  },
                  "referencedDeclaration": 14610,
                  "src": "897:21:56",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DummyMetadataRenderer_$14610",
                    "typeString": "contract DummyMetadataRenderer"
                  }
                }
              },
              "id": 11613,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "893:27:56",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DummyMetadataRenderer_$14610",
                "typeString": "contract DummyMetadataRenderer"
              }
            },
            "visibility": "public"
          },
          {
            "id": 11617,
            "nodeType": "VariableDeclaration",
            "src": "926:32:56",
            "constant": false,
            "functionSelector": "d0fb0203",
            "mutability": "mutable",
            "name": "feeManager",
            "nameLocation": "948:10:56",
            "scope": 11652,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ZoraFeeManager_$7867",
              "typeString": "contract ZoraFeeManager"
            },
            "typeName": {
              "id": 11616,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11615,
                "name": "ZoraFeeManager",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 7867,
                "src": "926:14:56"
              },
              "referencedDeclaration": 7867,
              "src": "926:14:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZoraFeeManager_$7867",
                "typeString": "contract ZoraFeeManager"
              }
            },
            "visibility": "public"
          },
          {
            "id": 11623,
            "nodeType": "VariableDeclaration",
            "src": "964:64:56",
            "constant": true,
            "functionSelector": "7168d231",
            "mutability": "constant",
            "name": "DEFAULT_OWNER_ADDRESS",
            "nameLocation": "988:21:56",
            "scope": 11652,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11618,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "964:7:56",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "30783233343939",
                  "id": 11621,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1020:7:56",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_144537_by_1",
                    "typeString": "int_const 144537"
                  },
                  "value": "0x23499"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_144537_by_1",
                    "typeString": "int_const 144537"
                  }
                ],
                "id": 11620,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1012:7:56",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 11619,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1012:7:56",
                  "typeDescriptions": {}
                }
              },
              "id": 11622,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1012:16:56",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 11632,
            "nodeType": "VariableDeclaration",
            "src": "1034:99:56",
            "constant": true,
            "functionSelector": "11568985",
            "mutability": "constant",
            "name": "DEFAULT_FUNDS_RECIPIENT_ADDRESS",
            "nameLocation": "1066:31:56",
            "scope": 11652,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 11624,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1034:15:56",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "30783231333033",
                      "id": 11629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1124:7:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_135939_by_1",
                        "typeString": "int_const 135939"
                      },
                      "value": "0x21303"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_135939_by_1",
                        "typeString": "int_const 135939"
                      }
                    ],
                    "id": 11628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1116:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 11627,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1116:7:56",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 11630,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1116:16:56",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 11626,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1108:8:56",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 11625,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1108:8:56",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 11631,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1108:25:56",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 11641,
            "nodeType": "VariableDeclaration",
            "src": "1139:90:56",
            "constant": true,
            "functionSelector": "dcf0738a",
            "mutability": "constant",
            "name": "DEFAULT_ZORA_DAO_ADDRESS",
            "nameLocation": "1171:24:56",
            "scope": 11652,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 11633,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1139:15:56",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "3078393939",
                      "id": 11638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1222:5:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2457_by_1",
                        "typeString": "int_const 2457"
                      },
                      "value": "0x999"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_2457_by_1",
                        "typeString": "int_const 2457"
                      }
                    ],
                    "id": 11637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1214:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 11636,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1214:7:56",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 11639,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1214:14:56",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 11635,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1206:8:56",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 11634,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1206:8:56",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 11640,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1206:23:56",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 11647,
            "nodeType": "VariableDeclaration",
            "src": "1235:57:56",
            "constant": true,
            "functionSelector": "4e21f9c0",
            "mutability": "constant",
            "name": "mediaContract",
            "nameLocation": "1259:13:56",
            "scope": 11652,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11642,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1235:7:56",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "3078313233343536",
                  "id": 11645,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1283:8:56",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1193046_by_1",
                    "typeString": "int_const 1193046"
                  },
                  "value": "0x123456"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_1193046_by_1",
                    "typeString": "int_const 1193046"
                  }
                ],
                "id": 11644,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1275:7:56",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 11643,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1275:7:56",
                  "typeDescriptions": {}
                }
              },
              "id": 11646,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1275:17:56",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 11651,
            "nodeType": "FunctionDefinition",
            "src": "1299:32:56",
            "body": {
              "id": 11650,
              "nodeType": "Block",
              "src": "1323:8:56",
              "statements": []
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1308:5:56",
            "parameters": {
              "id": 11648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1313:2:56"
            },
            "returnParameters": {
              "id": 11649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1323:0:56"
            },
            "scope": 11652,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11594,
              "name": "DSTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3150,
              "src": "738:6:56"
            },
            "id": 11595,
            "nodeType": "InheritanceSpecifier",
            "src": "738:6:56"
          }
        ],
        "canonicalName": "ERC721DropTest",
        "contractDependencies": [
          14610
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          11652,
          3150
        ],
        "name": "ERC721DropTest",
        "nameLocation": "720:14:56",
        "scope": 11653,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 56
}