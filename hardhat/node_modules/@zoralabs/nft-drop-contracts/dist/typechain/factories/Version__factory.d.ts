import { Signer, ContractFactory, BigNumberish, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Version, VersionInterface } from "../Version";
declare type VersionConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class Version__factory extends ContractFactory {
    constructor(...args: VersionConstructorParams);
    deploy(version: BigNumberish, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<Version>;
    getDeployTransaction(version: BigNumberish, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): Version;
    connect(signer: Signer): Version__factory;
    static readonly bytecode = "0x60a060405234801561001057600080fd5b5060405161011f38038061011f83398101604081905261002f9161003d565b63ffffffff1660805261006a565b60006020828403121561004f57600080fd5b815163ffffffff8116811461006357600080fd5b9392505050565b608051609d6100826000396000602f0152609d6000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063a0a8e46014602d575b600080fd5b7f000000000000000000000000000000000000000000000000000000000000000060405163ffffffff909116815260200160405180910390f3fea26469706673582212208ac5d594a80616774562bf6ded420a0b27e7c2b4d6bdacb1977cdd2a82655dcf64736f6c634300080a0033";
    static readonly abi: ({
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        name?: undefined;
        outputs?: undefined;
    } | {
        inputs: never[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    })[];
    static createInterface(): VersionInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): Version;
}
export {};
